{"version":3,"file":"can-activate.interface.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/common/","sources":["interfaces/features/can-activate.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable } from 'rxjs';\nimport { ExecutionContext } from './execution-context.interface';\n\n/**\n * Interface defining the `canActivate()` function that must be implemented\n * by a guard.  Return value indicates whether or not the current request is\n * allowed to proceed.  Return can be either synchronous (`boolean`)\n * or asynchronous (`Promise` or `Observable`).\n *\n * @see [Guards](https://docs.nestjs.com/guards)\n *\n * @publicApi\n */\nexport interface CanActivate {\n  /**\n   * @param context Current execution context. Provides access to details about\n   * the current request pipeline.\n   *\n   * @returns Value indicating whether or not the current request is allowed to\n   * proceed.\n   */\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise<boolean> | Observable<boolean>;\n}\n"]}