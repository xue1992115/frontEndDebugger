{"version":3,"file":"arguments-host.interface.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/common/","sources":["interfaces/features/arguments-host.interface.ts"],"names":[],"mappings":"","sourcesContent":["export type ContextType = 'http' | 'ws' | 'rpc';\n\n/**\n * Methods to obtain request and response objects.\n *\n * @publicApi\n */\nexport interface HttpArgumentsHost {\n  /**\n   * Returns the in-flight `request` object.\n   */\n  getRequest<T = any>(): T;\n  /**\n   * Returns the in-flight `response` object.\n   */\n  getResponse<T = any>(): T;\n  getNext<T = any>(): T;\n}\n\n/**\n * Methods to obtain WebSocket data and client objects.\n *\n * @publicApi\n */\nexport interface WsArgumentsHost {\n  /**\n   * Returns the data object.\n   */\n  getData<T = any>(): T;\n  /**\n   * Returns the client object.\n   */\n  getClient<T = any>(): T;\n}\n\n/**\n * Methods to obtain RPC data object.\n *\n * @publicApi\n */\nexport interface RpcArgumentsHost {\n  /**\n   * Returns the data object.\n   */\n  getData<T = any>(): T;\n\n  /**\n   * Returns the context object.\n   */\n  getContext<T = any>(): T;\n}\n\n/**\n * Provides methods for retrieving the arguments being passed to a handler.\n * Allows choosing the appropriate execution context (e.g., Http, RPC, or\n * WebSockets) to retrieve the arguments from.\n *\n * @publicApi\n */\nexport interface ArgumentsHost {\n  /**\n   * Returns the array of arguments being passed to the handler.\n   */\n  getArgs<T extends Array<any> = any[]>(): T;\n  /**\n   * Returns a particular argument by index.\n   * @param index index of argument to retrieve\n   */\n  getArgByIndex<T = any>(index: number): T;\n  /**\n   * Switch context to RPC.\n   * @returns interface with methods to retrieve RPC arguments\n   */\n  switchToRpc(): RpcArgumentsHost;\n  /**\n   * Switch context to HTTP.\n   * @returns interface with methods to retrieve HTTP arguments\n   */\n  switchToHttp(): HttpArgumentsHost;\n  /**\n   * Switch context to WebSockets.\n   * @returns interface with methods to retrieve WebSockets arguments\n   */\n  switchToWs(): WsArgumentsHost;\n  /**\n   * Returns the current execution context type (string)\n   */\n  getType<TContext extends string = ContextType>(): TContext;\n}\n"]}