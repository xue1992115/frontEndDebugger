{"version":3,"file":"web-socket-adapter.interface.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/common/","sources":["interfaces/websockets/web-socket-adapter.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable } from 'rxjs';\n\n/**\n * @publicApi\n */\nexport interface WsMessageHandler<T = string> {\n  message: T;\n  callback: (...args: any[]) => Observable<any> | Promise<any>;\n}\n\n/**\n * @publicApi\n */\nexport interface WebSocketAdapter<\n  TServer = any,\n  TClient = any,\n  TOptions = any,\n> {\n  create(port: number, options?: TOptions): TServer;\n  bindClientConnect(server: TServer, callback: Function): any;\n  bindClientDisconnect?(client: TClient, callback: Function): any;\n  bindMessageHandlers(\n    client: TClient,\n    handlers: WsMessageHandler[],\n    transform: (data: any) => Observable<any>,\n  ): any;\n  close(server: TServer): any;\n}\n"]}