{"version":3,"file":"rpc-exception-filter.interface.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/common/","sources":["interfaces/exceptions/rpc-exception-filter.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable } from 'rxjs';\nimport { ArgumentsHost } from '../features/arguments-host.interface';\n\n/**\n * Interface describing implementation of an RPC exception filter.\n *\n * @see [Exception Filters](https://docs.nestjs.com/microservices/exception-filters)\n *\n * @publicApi\n */\nexport interface RpcExceptionFilter<T = any, R = any> {\n  /**\n   * Method to implement a custom (microservice) exception filter.\n   *\n   * @param exception the type (class) of the exception being handled\n   * @param host used to access an array of arguments for\n   * the in-flight message\n   */\n  catch(exception: T, host: ArgumentsHost): Observable<R>;\n}\n"]}