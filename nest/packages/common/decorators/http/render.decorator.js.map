{"version":3,"file":"render.decorator.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/common/","sources":["decorators/http/render.decorator.ts"],"names":[],"mappings":";;;AAAA,+CAAkD;AAElD;;;;;;;;;;GAUG;AACH,SAAgB,MAAM,CAAC,QAAgB;IACrC,OAAO,CACL,MAAc,EACd,GAAoB,EACpB,UAAwC,EACxC,EAAE;QACF,OAAO,CAAC,cAAc,CAAC,2BAAe,EAAE,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACpE,OAAO,UAAU,CAAC;IACpB,CAAC,CAAC;AACJ,CAAC;AATD,wBASC","sourcesContent":["import { RENDER_METADATA } from '../../constants';\n\n/**\n * Route handler method Decorator.  Defines a template to be rendered by the controller.\n *\n * For example: `@Render('index')`\n *\n * @param template name of the render engine template file\n *\n * @see [Model-View-Controller](https://docs.nestjs.com/techniques/mvc)\n *\n * @publicApi\n */\nexport function Render(template: string): MethodDecorator {\n  return (\n    target: object,\n    key: string | symbol,\n    descriptor: TypedPropertyDescriptor<any>,\n  ) => {\n    Reflect.defineMetadata(RENDER_METADATA, template, descriptor.value);\n    return descriptor;\n  };\n}\n"]}