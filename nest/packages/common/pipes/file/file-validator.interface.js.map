{"version":3,"file":"file-validator.interface.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/common/","sources":["pipes/file/file-validator.interface.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,MAAsB,aAAa;IACjC,YAA+B,iBAAqC;QAArC,sBAAiB,GAAjB,iBAAiB,CAAoB;IAAG,CAAC;CAazE;AAdD,sCAcC","sourcesContent":["/**\n * Interface describing FileValidators, which can be added to a ParseFilePipe\n *\n * @see {ParseFilePipe}\n * @publicApi\n */\nexport abstract class FileValidator<TValidationOptions = Record<string, any>> {\n  constructor(protected readonly validationOptions: TValidationOptions) {}\n\n  /**\n   * Indicates if this file should be considered valid, according to the options passed in the constructor.\n   * @param file the file from the request object\n   */\n  abstract isValid(file?: any): boolean | Promise<boolean>;\n\n  /**\n   * Builds an error message in case the validation fails.\n   * @param file the file from the request object\n   */\n  abstract buildErrorMessage(file: any): string;\n}\n"]}