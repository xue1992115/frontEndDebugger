{"version":3,"file":"is-log-level-enabled.util.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/common/","sources":["services/utils/is-log-level-enabled.util.ts"],"names":[],"mappings":";;;AAEA,MAAM,gBAAgB,GAA6B;IACjD,KAAK,EAAE,CAAC;IACR,OAAO,EAAE,CAAC;IACV,GAAG,EAAE,CAAC;IACN,IAAI,EAAE,CAAC;IACP,KAAK,EAAE,CAAC;CACT,CAAC;AAEF;;;;GAIG;AACH,SAAgB,iBAAiB,CAC/B,WAAqB,EACrB,SAAiC;;IAEjC,IAAI,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,MAAM,MAAK,CAAC,CAAC,EAAE;QACvE,OAAO,KAAK,CAAC;KACd;IACD,IAAI,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;QACnC,OAAO,IAAI,CAAC;KACb;IACD,MAAM,oBAAoB,GAAG,MAAA,SAAS;SACnC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SACrC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,0CAAG,CAAC,CAAC,CAAC;IAE9B,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,WAAW,CAAC,CAAC;IACvD,OAAO,gBAAgB,IAAI,oBAAoB,CAAC;AAClD,CAAC;AAhBD,8CAgBC","sourcesContent":["import { LogLevel } from '../logger.service';\n\nconst LOG_LEVEL_VALUES: Record<LogLevel, number> = {\n  debug: 0,\n  verbose: 1,\n  log: 2,\n  warn: 3,\n  error: 4,\n};\n\n/**\n * Checks if target level is enabled.\n * @param targetLevel target level\n * @param logLevels array of enabled log levels\n */\nexport function isLogLevelEnabled(\n  targetLevel: LogLevel,\n  logLevels: LogLevel[] | undefined,\n): boolean {\n  if (!logLevels || (Array.isArray(logLevels) && logLevels?.length === 0)) {\n    return false;\n  }\n  if (logLevels.includes(targetLevel)) {\n    return true;\n  }\n  const highestLogLevelValue = logLevels\n    .map(level => LOG_LEVEL_VALUES[level])\n    .sort((a, b) => b - a)?.[0];\n\n  const targetLevelValue = LOG_LEVEL_VALUES[targetLevel];\n  return targetLevelValue >= highestLogLevelValue;\n}\n"]}