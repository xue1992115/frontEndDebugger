{"version":3,"file":"cache-ttl.decorator.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/common/","sources":["cache/decorators/cache-ttl.decorator.ts"],"names":[],"mappings":";;;AAAA,iDAA+C;AAE/C,wDAAwD;AAejD,MAAM,QAAQ,GAAG,CAAC,GAA6B,EAAE,EAAE,CACxD,IAAA,wBAAW,EAAC,oCAAkB,EAAE,GAAG,CAAC,CAAC;AAD1B,QAAA,QAAQ,YACkB","sourcesContent":["import { SetMetadata } from '../../decorators';\nimport { ExecutionContext } from '../../interfaces/features/execution-context.interface';\nimport { CACHE_TTL_METADATA } from '../cache.constants';\n\n/**\n * Decorator that sets the cache ttl setting the duration for cache expiration.\n *\n * For example: `@CacheTTL(5)`\n *\n * @param ttl number set the cache expiration time\n *\n * @see [Caching](https://docs.nestjs.com/techniques/caching)\n *\n * @deprecated `CacheModule` (from the `@nestjs/common` package) is deprecated and will be removed in the next major release. Please, use the `@nestjs/cache-manager` package instead\n * @publicApi\n */\ntype CacheTTLFactory = (ctx: ExecutionContext) => Promise<number> | number;\nexport const CacheTTL = (ttl: number | CacheTTLFactory) =>\n  SetMetadata(CACHE_TTL_METADATA, ttl);\n"]}