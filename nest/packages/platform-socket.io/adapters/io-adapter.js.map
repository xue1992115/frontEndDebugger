{"version":3,"file":"io-adapter.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/platform-socket.io/","sources":["adapters/io-adapter.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFunction, isNil } from '@nestjs/common/utils/shared.utils';\nimport {\n  AbstractWsAdapter,\n  MessageMappingProperties,\n} from '@nestjs/websockets';\nimport { DISCONNECT_EVENT } from '@nestjs/websockets/constants';\nimport { fromEvent, Observable } from 'rxjs';\nimport { filter, first, map, mergeMap, share, takeUntil } from 'rxjs/operators';\nimport { Server, ServerOptions, Socket } from 'socket.io';\n\n/**\n * @publicApi\n */\nexport class IoAdapter extends AbstractWsAdapter {\n  public create(\n    port: number,\n    options?: ServerOptions & { namespace?: string; server?: any },\n  ): Server {\n    if (!options) {\n      return this.createIOServer(port);\n    }\n    const { namespace, server, ...opt } = options;\n    return server && isFunction(server.of)\n      ? server.of(namespace)\n      : namespace\n      ? this.createIOServer(port, opt).of(namespace)\n      : this.createIOServer(port, opt);\n  }\n\n  public createIOServer(port: number, options?: any): any {\n    if (this.httpServer && port === 0) {\n      return new Server(this.httpServer, options);\n    }\n    return new Server(port, options);\n  }\n\n  public bindMessageHandlers(\n    socket: Socket,\n    handlers: MessageMappingProperties[],\n    transform: (data: any) => Observable<any>,\n  ) {\n    const disconnect$ = fromEvent(socket, DISCONNECT_EVENT).pipe(\n      share(),\n      first(),\n    );\n\n    handlers.forEach(({ message, callback }) => {\n      const source$ = fromEvent(socket, message).pipe(\n        mergeMap((payload: any) => {\n          const { data, ack } = this.mapPayload(payload);\n          return transform(callback(data, ack)).pipe(\n            filter((response: any) => !isNil(response)),\n            map((response: any) => [response, ack]),\n          );\n        }),\n        takeUntil(disconnect$),\n      );\n      source$.subscribe(([response, ack]) => {\n        if (response.event) {\n          return socket.emit(response.event, response.data);\n        }\n        isFunction(ack) && ack(response);\n      });\n    });\n  }\n\n  public mapPayload(payload: unknown): { data: any; ack?: Function } {\n    if (!Array.isArray(payload)) {\n      if (isFunction(payload)) {\n        return { data: undefined, ack: payload as Function };\n      }\n      return { data: payload };\n    }\n    const lastElement = payload[payload.length - 1];\n    const isAck = isFunction(lastElement);\n    if (isAck) {\n      const size = payload.length - 1;\n      return {\n        data: size === 1 ? payload[0] : payload.slice(0, size),\n        ack: lastElement,\n      };\n    }\n    return { data: payload };\n  }\n}\n"]}