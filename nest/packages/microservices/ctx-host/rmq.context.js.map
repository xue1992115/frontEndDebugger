{"version":3,"file":"rmq.context.js","sourceRoot":"","sources":["rmq.context.ts"],"names":[],"mappings":";;;AAAA,yDAAoD;AAIpD,MAAa,UAAW,SAAQ,iCAA8B;IAC5D,YAAY,IAAoB;QAC9B,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAED;;OAEG;IACH,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;CACF;AAzBD,gCAyBC","sourcesContent":["import { BaseRpcContext } from './base-rpc.context';\n\ntype RmqContextArgs = [Record<string, any>, any, string];\n\nexport class RmqContext extends BaseRpcContext<RmqContextArgs> {\n  constructor(args: RmqContextArgs) {\n    super(args);\n  }\n\n  /**\n   * Returns the original message (with properties, fields, and content).\n   */\n  getMessage() {\n    return this.args[0];\n  }\n\n  /**\n   * Returns the reference to the original RMQ channel.\n   */\n  getChannelRef() {\n    return this.args[1];\n  }\n\n  /**\n   * Returns the name of the pattern.\n   */\n  getPattern() {\n    return this.args[2];\n  }\n}\n"]}