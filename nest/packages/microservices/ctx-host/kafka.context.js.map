{"version":3,"file":"kafka.context.js","sourceRoot":"","sources":["kafka.context.ts"],"names":[],"mappings":";;;AACA,yDAAoD;AAWpD,MAAa,YAAa,SAAQ,iCAAgC;IAChE,YAAY,IAAsB;QAChC,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAED;;OAEG;IACH,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;CACF;AA9CD,oCA8CC","sourcesContent":["import { Consumer, KafkaMessage, Producer } from '../external/kafka.interface';\nimport { BaseRpcContext } from './base-rpc.context';\n\ntype KafkaContextArgs = [\n  message: KafkaMessage,\n  partition: number,\n  topic: string,\n  consumer: Consumer,\n  heartbeat: () => Promise<void>,\n  producer: Producer,\n];\n\nexport class KafkaContext extends BaseRpcContext<KafkaContextArgs> {\n  constructor(args: KafkaContextArgs) {\n    super(args);\n  }\n\n  /**\n   * Returns the reference to the original message.\n   */\n  getMessage() {\n    return this.args[0];\n  }\n\n  /**\n   * Returns the partition.\n   */\n  getPartition() {\n    return this.args[1];\n  }\n\n  /**\n   * Returns the name of the topic.\n   */\n  getTopic() {\n    return this.args[2];\n  }\n\n  /**\n   * Returns the Kafka consumer reference.\n   */\n  getConsumer() {\n    return this.args[3];\n  }\n\n  /**\n   * Returns the Kafka heartbeat callback.\n   */\n  getHeartbeat() {\n    return this.args[4];\n  }\n\n  /**\n   * Returns the Kafka producer reference,\n   */\n  getProducer() {\n    return this.args[5];\n  }\n}\n"]}