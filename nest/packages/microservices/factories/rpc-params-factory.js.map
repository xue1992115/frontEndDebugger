{"version":3,"file":"rpc-params-factory.js","sourceRoot":"","sources":["rpc-params-factory.ts"],"names":[],"mappings":";;;AAAA,oEAA2D;AAE3D,MAAa,gBAAgB;IACpB,mBAAmB,CACxB,IAAY,EACZ,IAAwB,EACxB,IAAe;;QAEf,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QACD,QAAQ,IAAoB,EAAE;YAC5B,KAAK,iCAAY,CAAC,OAAO;gBACvB,OAAO,IAAI,CAAC,CAAC,CAAC,MAAA,IAAI,CAAC,CAAC,CAAC,0CAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1C,KAAK,iCAAY,CAAC,OAAO;gBACvB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,iCAAY,CAAC,SAAS;gBACzB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC;CACF;AApBD,4CAoBC","sourcesContent":["import { RpcParamtype } from '../enums/rpc-paramtype.enum';\n\nexport class RpcParamsFactory {\n  public exchangeKeyForValue(\n    type: number,\n    data: string | undefined,\n    args: unknown[],\n  ) {\n    if (!args) {\n      return null;\n    }\n    switch (type as RpcParamtype) {\n      case RpcParamtype.PAYLOAD:\n        return data ? args[0]?.[data] : args[0];\n      case RpcParamtype.CONTEXT:\n        return args[1];\n      case RpcParamtype.GRPC_CALL:\n        return args[2];\n      default:\n        return null;\n    }\n  }\n}\n"]}