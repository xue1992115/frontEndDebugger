{"version":3,"file":"request-context-host.js","sourceRoot":"","sources":["request-context-host.ts"],"names":[],"mappings":";;;AAGA;;GAEG;AACH,MAAa,kBAAkB;IAK7B,YACkB,OAAqC,EACrC,IAAW,EACX,OAAiB;QAFjB,YAAO,GAAP,OAAO,CAA8B;QACrC,SAAI,GAAJ,IAAI,CAAO;QACX,YAAO,GAAP,OAAO,CAAU;IAChC,CAAC;IAEJ,MAAM,CAAC,MAAM,CACX,OAAqC,EACrC,IAAW,EACX,OAAiB;QAEjB,MAAM,IAAI,GAAG,IAAI,kBAAkB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;CACF;AA/BD,gDA+BC","sourcesContent":["import { BaseRpcContext } from '../ctx-host/base-rpc.context';\nimport { RequestContext } from '../interfaces';\n\n/**\n * @publicApi\n */\nexport class RequestContextHost<\n  TData = any,\n  TContext extends BaseRpcContext = any,\n> implements RequestContext<TData>\n{\n  constructor(\n    public readonly pattern: string | Record<string, any>,\n    public readonly data: TData,\n    public readonly context: TContext,\n  ) {}\n\n  static create<TData, TContext extends BaseRpcContext>(\n    pattern: string | Record<string, any>,\n    data: TData,\n    context: TContext,\n  ): RequestContext<TData, TContext> {\n    const host = new RequestContextHost(pattern, data, context);\n    return host;\n  }\n\n  public getData(): TData {\n    return this.data;\n  }\n\n  public getPattern(): string | Record<string, any> {\n    return this.pattern;\n  }\n\n  public getContext(): TContext {\n    return this.context;\n  }\n}\n"]}