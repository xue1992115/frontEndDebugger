{"version":3,"file":"rpc-proxy.js","sourceRoot":"","sources":["rpc-proxy.ts"],"names":[],"mappings":";;;AAAA,wFAAmF;AACnF,+BAAgD;AAChD,8CAA4C;AAG5C,MAAa,QAAQ;IACZ,MAAM,CACX,cAAgE,EAChE,iBAAuC;QAEvC,OAAO,KAAK,EAAE,GAAG,IAAe,EAAE,EAAE;YAClC,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,cAAc,CAAC,GAAG,IAAI,CAAC,CAAC;gBAC7C,OAAO,CAAC,IAAA,mBAAY,EAAC,MAAM,CAAC;oBAC1B,CAAC,CAAC,MAAM;oBACR,CAAC,CAAC,MAAM,CAAC,IAAI,CACT,IAAA,sBAAU,EAAC,KAAK,CAAC,EAAE,CACjB,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,EAAE,KAAK,CAAC,CACjD,CACF,CAAC;aACP;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;aACzD;QACH,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CACT,iBAAuC,EACvC,IAAe,EACf,KAAQ;QAER,MAAM,IAAI,GAAG,IAAI,6CAAoB,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpB,OAAO,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;CACF;AA9BD,4BA8BC","sourcesContent":["import { ExecutionContextHost } from '@nestjs/core/helpers/execution-context-host';\nimport { isObservable, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { RpcExceptionsHandler } from '../exceptions/rpc-exceptions-handler';\n\nexport class RpcProxy {\n  public create(\n    targetCallback: (...args: unknown[]) => Promise<Observable<any>>,\n    exceptionsHandler: RpcExceptionsHandler,\n  ): (...args: unknown[]) => Promise<Observable<unknown>> {\n    return async (...args: unknown[]) => {\n      try {\n        const result = await targetCallback(...args);\n        return !isObservable(result)\n          ? result\n          : result.pipe(\n              catchError(error =>\n                this.handleError(exceptionsHandler, args, error),\n              ),\n            );\n      } catch (error) {\n        return this.handleError(exceptionsHandler, args, error);\n      }\n    };\n  }\n\n  handleError<T>(\n    exceptionsHandler: RpcExceptionsHandler,\n    args: unknown[],\n    error: T,\n  ): Observable<unknown> {\n    const host = new ExecutionContextHost(args);\n    host.setType('rpc');\n    return exceptionsHandler.handle(error, host);\n  }\n}\n"]}