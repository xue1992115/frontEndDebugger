{"version":3,"file":"clients.module.js","sourceRoot":"","sources":["clients.module.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  DynamicModule,\n  Module,\n  OnApplicationShutdown,\n  Provider,\n} from '@nestjs/common';\nimport { ClientProxy, ClientProxyFactory } from '../client';\nimport { Closeable } from '../interfaces';\nimport {\n  ClientsModuleAsyncOptions,\n  ClientsModuleOptions,\n  ClientsModuleOptionsFactory,\n  ClientsProviderAsyncOptions,\n} from './interfaces';\n\n@Module({})\nexport class ClientsModule {\n  static register(options: ClientsModuleOptions): DynamicModule {\n    const clients = (options || []).map(item => ({\n      provide: item.name,\n      useValue: this.assignOnAppShutdownHook(ClientProxyFactory.create(item)),\n    }));\n    return {\n      module: ClientsModule,\n      providers: clients,\n      exports: clients,\n    };\n  }\n\n  static registerAsync(options: ClientsModuleAsyncOptions): DynamicModule {\n    const providers: Provider[] = options.reduce(\n      (accProviders: Provider[], item) =>\n        accProviders\n          .concat(this.createAsyncProviders(item))\n          .concat(item.extraProviders || []),\n      [],\n    );\n    const imports = options.reduce(\n      (accImports, option) =>\n        option.imports && !accImports.includes(option.imports)\n          ? accImports.concat(option.imports)\n          : accImports,\n      [],\n    );\n    return {\n      module: ClientsModule,\n      imports,\n      providers: providers,\n      exports: providers,\n    };\n  }\n\n  private static createAsyncProviders(\n    options: ClientsProviderAsyncOptions,\n  ): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass,\n        useClass: options.useClass,\n      },\n    ];\n  }\n\n  private static createAsyncOptionsProvider(\n    options: ClientsProviderAsyncOptions,\n  ): Provider {\n    if (options.useFactory) {\n      return {\n        provide: options.name,\n        useFactory: this.createFactoryWrapper(options.useFactory),\n        inject: options.inject || [],\n      };\n    }\n    return {\n      provide: options.name,\n      useFactory: this.createFactoryWrapper(\n        (optionsFactory: ClientsModuleOptionsFactory) =>\n          optionsFactory.createClientOptions(),\n      ),\n      inject: [options.useExisting || options.useClass],\n    };\n  }\n\n  private static createFactoryWrapper(\n    useFactory: ClientsProviderAsyncOptions['useFactory'],\n  ) {\n    return async (...args: any[]) => {\n      const clientOptions = await useFactory(...args);\n      const clientProxyRef = ClientProxyFactory.create(clientOptions);\n      return this.assignOnAppShutdownHook(clientProxyRef);\n    };\n  }\n\n  private static assignOnAppShutdownHook(client: ClientProxy & Closeable) {\n    (client as unknown as OnApplicationShutdown).onApplicationShutdown =\n      client.close;\n    return client;\n  }\n}\n"]}