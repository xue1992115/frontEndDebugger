{"version":3,"file":"clients-module.interface.js","sourceRoot":"","sources":["clients-module.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { ClientOptions, CustomClientOptions } from '../../interfaces';\nimport { Type, Provider, ModuleMetadata } from '@nestjs/common/interfaces';\n\nexport type ClientProvider = ClientOptions | CustomClientOptions;\n\nexport type ClientProviderOptions = ClientProvider & {\n  name: string | symbol;\n};\n\nexport type ClientsModuleOptions = Array<ClientProviderOptions>;\n\nexport interface ClientsModuleOptionsFactory {\n  createClientOptions(): Promise<ClientProvider> | ClientProvider;\n}\n\nexport interface ClientsProviderAsyncOptions\n  extends Pick<ModuleMetadata, 'imports'> {\n  useExisting?: Type<ClientsModuleOptionsFactory>;\n  useClass?: Type<ClientsModuleOptionsFactory>;\n  useFactory?: (...args: any[]) => Promise<ClientProvider> | ClientProvider;\n  inject?: any[];\n  extraProviders?: Provider[];\n  name: string | symbol;\n}\n\nexport type ClientsModuleAsyncOptions = Array<ClientsProviderAsyncOptions>;\n"]}