{"version":3,"file":"message-handler.interface.js","sourceRoot":"","sources":["message-handler.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable } from 'rxjs';\n\n/**\n * @publicApi\n */\nexport interface MessageHandler<TInput = any, TContext = any, TResult = any> {\n  (data: TInput, ctx?: TContext):\n    | Promise<Observable<TResult>>\n    | Promise<TResult>;\n  next?: (\n    data: TInput,\n    ctx?: TContext,\n  ) => Promise<Observable<TResult>> | Promise<TResult>;\n  isEventHandler?: boolean;\n  extras?: Record<string, any>;\n}\n"]}