{"version":3,"file":"client-metadata.interface.js","sourceRoot":"","sources":["client-metadata.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { Type } from '@nestjs/common';\nimport { ClientProxy } from '../client';\nimport { TcpSocket } from '../helpers';\nimport { Transport } from '../enums/transport.enum';\nimport { Deserializer } from './deserializer.interface';\nimport {\n  GrpcOptions,\n  KafkaOptions,\n  MqttOptions,\n  NatsOptions,\n  RedisOptions,\n  RmqOptions,\n} from './microservice-configuration.interface';\nimport { Serializer } from './serializer.interface';\nimport { ConnectionOptions } from 'tls';\n\nexport type ClientOptions =\n  | RedisOptions\n  | NatsOptions\n  | MqttOptions\n  | GrpcOptions\n  | KafkaOptions\n  | TcpClientOptions\n  | RmqOptions;\n\n/**\n * @publicApi\n */\nexport interface CustomClientOptions {\n  customClass: Type<ClientProxy>;\n  options?: Record<string, any>;\n}\n\n/**\n * @publicApi\n */\nexport interface TcpClientOptions {\n  transport: Transport.TCP;\n  options?: {\n    host?: string;\n    port?: number;\n    serializer?: Serializer;\n    deserializer?: Deserializer;\n    tlsOptions?: ConnectionOptions;\n    socketClass?: Type<TcpSocket>;\n  };\n}\n"]}