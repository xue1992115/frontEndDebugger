{"version":3,"file":"mqtt-record.serializer.js","sourceRoot":"","sources":["mqtt-record.serializer.ts"],"names":[],"mappings":";;;AAAA,oEAA6D;AAE7D,wDAAgD;AAEhD,MAAa,oBAAoB;IAG/B,SAAS,CAAC,MAAwB;QAChC,IACE,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI;YACZ,IAAA,uBAAQ,EAAC,MAAM,CAAC,IAAI,CAAC;YACrB,MAAM,CAAC,IAAI,YAAY,4BAAU,EACjC;YACA,MAAM,MAAM,GAAG,MAAM,CAAC,IAAkB,CAAC;YACzC,uCACK,MAAM,KACT,IAAI,EAAE,MAAM,CAAC,IAAI,EACjB,OAAO,EAAE,MAAM,CAAC,OAAO,IACvB;SACH;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAlBD,oDAkBC","sourcesContent":["import { isObject } from '@nestjs/common/utils/shared.utils';\nimport { ReadPacket, Serializer } from '../interfaces';\nimport { MqttRecord } from '../record-builders';\n\nexport class MqttRecordSerializer\n  implements Serializer<ReadPacket, ReadPacket & Partial<MqttRecord>>\n{\n  serialize(packet: ReadPacket | any): ReadPacket & Partial<MqttRecord> {\n    if (\n      packet?.data &&\n      isObject(packet.data) &&\n      packet.data instanceof MqttRecord\n    ) {\n      const record = packet.data as MqttRecord;\n      return {\n        ...packet,\n        data: record.data,\n        options: record.options,\n      };\n    }\n    return packet;\n  }\n}\n"]}