{"version":3,"file":"message-body.decorator.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/websockets/","sources":["decorators/message-body.decorator.ts"],"names":[],"mappings":";;;AACA,kEAAyD;AACzD,sDAAmE;AAmDnE,SAAgB,WAAW,CACzB,cAA+D,EAC/D,GAAG,KAA8C;IAEjD,OAAO,IAAA,yCAA2B,EAAC,+BAAW,CAAC,OAAO,CAAC,CACrD,cAAc,EACd,GAAG,KAAK,CACT,CAAC;AACJ,CAAC;AARD,kCAQC","sourcesContent":["import { PipeTransform, Type } from '@nestjs/common';\nimport { WsParamtype } from '../enums/ws-paramtype.enum';\nimport { createPipesWsParamDecorator } from '../utils/param.utils';\n\n/**\n * WebSockets message body parameter decorator.\n *\n * @publicApi\n */\nexport function MessageBody(): ParameterDecorator;\n/**\n * WebSockets message body parameter decorator.\n *\n * Example:\n * ```typescript\n * create(@MessageBody(new ValidationPipe()) createDto: CreateCatDto)\n * ```\n * @param pipes one or more pipes - either instances or classes - to apply to\n * the bound parameter.\n *\n * @publicApi\n */\nexport function MessageBody(\n  ...pipes: (Type<PipeTransform> | PipeTransform)[]\n): ParameterDecorator;\n/**\n * WebSockets message body parameter decorator. Extracts a property from the\n * message payload object. May also apply pipes to the bound parameter.\n *\n * For example, extracting all params:\n * ```typescript\n * findMany(@MessageBody() ids: string[])\n * ```\n *\n * For example, extracting a single param:\n * ```typescript\n * create(@MessageBody('data') createDto: { data: string })\n * ```\n *\n * For example, extracting a single param with pipe:\n * ```typescript\n * create(@MessageBody('data', new ValidationPipe()) createDto: { data: string })\n * ```\n * @param propertyKey name of single property to extract from the message payload\n * @param pipes one or more pipes - either instances or classes - to apply to\n * the bound parameter.\n *\n * @publicApi\n */\nexport function MessageBody(\n  propertyKey: string,\n  ...pipes: (Type<PipeTransform> | PipeTransform)[]\n): ParameterDecorator;\nexport function MessageBody(\n  propertyOrPipe?: string | (Type<PipeTransform> | PipeTransform),\n  ...pipes: (Type<PipeTransform> | PipeTransform)[]\n): ParameterDecorator {\n  return createPipesWsParamDecorator(WsParamtype.PAYLOAD)(\n    propertyOrPipe,\n    ...pipes,\n  );\n}\n"]}