{"version":3,"file":"subscribe-message.decorator.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/websockets/","sources":["decorators/subscribe-message.decorator.ts"],"names":[],"mappings":";;;AAAA,4CAA0E;AAE1E;;;;GAIG;AACI,MAAM,gBAAgB,GAAG,CAAa,OAAU,EAAmB,EAAE;IAC1E,OAAO,CACL,MAAc,EACd,GAAoB,EACpB,UAA8B,EAC9B,EAAE;QACF,OAAO,CAAC,cAAc,CAAC,oCAAwB,EAAE,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACzE,OAAO,CAAC,cAAc,CAAC,4BAAgB,EAAE,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACpE,OAAO,UAAU,CAAC;IACpB,CAAC,CAAC;AACJ,CAAC,CAAC;AAVW,QAAA,gBAAgB,oBAU3B","sourcesContent":["import { MESSAGE_MAPPING_METADATA, MESSAGE_METADATA } from '../constants';\n\n/**\n * Subscribes to messages that fulfils chosen pattern.\n *\n * @publicApi\n */\nexport const SubscribeMessage = <T = string>(message: T): MethodDecorator => {\n  return (\n    target: object,\n    key: string | symbol,\n    descriptor: PropertyDescriptor,\n  ) => {\n    Reflect.defineMetadata(MESSAGE_MAPPING_METADATA, true, descriptor.value);\n    Reflect.defineMetadata(MESSAGE_METADATA, message, descriptor.value);\n    return descriptor;\n  };\n};\n"]}