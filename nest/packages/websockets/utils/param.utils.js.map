{"version":3,"file":"param.utils.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/websockets/","sources":["utils/param.utils.ts"],"names":[],"mappings":";;;AACA,kGAAuF;AACvF,oEAAoE;AACpE,4BAA0B;AAC1B,4CAAmD;AAGnD,SAAgB,sBAAsB,CACpC,SAAsB;IAEtB,OAAO,CAAC,GAAG,KAA8C,EAAE,EAAE,CAC3D,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE;QACrB,MAAM,IAAI,GACR,OAAO,CAAC,WAAW,CAAC,+BAAmB,EAAE,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC;QAC1E,OAAO,CAAC,cAAc,CACpB,+BAAmB,EACnB,IAAA,uCAAc,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC,EAC3D,MAAM,CAAC,WAAW,EAClB,GAAG,CACJ,CAAC;IACJ,CAAC,CAAC;AACN,CAAC;AAdD,wDAcC;AAEM,MAAM,2BAA2B,GACtC,CAAC,SAAsB,EAAE,EAAE,CAC3B,CACE,IAAU,EACV,GAAG,KAA8C,EAC7B,EAAE,CACxB,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE;IACrB,MAAM,IAAI,GACR,OAAO,CAAC,WAAW,CAAC,+BAAmB,EAAE,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC;IAC1E,MAAM,YAAY,GAAG,IAAA,oBAAK,EAAC,IAAI,CAAC,IAAI,IAAA,uBAAQ,EAAC,IAAI,CAAC,CAAC;IACnD,MAAM,SAAS,GAAG,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;IAClD,MAAM,UAAU,GAAG,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC;IAE3D,OAAO,CAAC,cAAc,CACpB,+BAAmB,EACnB,IAAA,uCAAc,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,UAAU,CAAC,EAChE,MAAM,CAAC,WAAW,EAClB,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAnBS,QAAA,2BAA2B,+BAmBpC","sourcesContent":["import { PipeTransform, Type } from '@nestjs/common';\nimport { assignMetadata } from '@nestjs/common/decorators/http/route-params.decorator';\nimport { isNil, isString } from '@nestjs/common/utils/shared.utils';\nimport 'reflect-metadata';\nimport { PARAM_ARGS_METADATA } from '../constants';\nimport { WsParamtype } from '../enums/ws-paramtype.enum';\n\nexport function createWsParamDecorator(\n  paramtype: WsParamtype,\n): (...pipes: (Type<PipeTransform> | PipeTransform)[]) => ParameterDecorator {\n  return (...pipes: (Type<PipeTransform> | PipeTransform)[]) =>\n    (target, key, index) => {\n      const args =\n        Reflect.getMetadata(PARAM_ARGS_METADATA, target.constructor, key) || {};\n      Reflect.defineMetadata(\n        PARAM_ARGS_METADATA,\n        assignMetadata(args, paramtype, index, undefined, ...pipes),\n        target.constructor,\n        key,\n      );\n    };\n}\n\nexport const createPipesWsParamDecorator =\n  (paramtype: WsParamtype) =>\n  (\n    data?: any,\n    ...pipes: (Type<PipeTransform> | PipeTransform)[]\n  ): ParameterDecorator =>\n  (target, key, index) => {\n    const args =\n      Reflect.getMetadata(PARAM_ARGS_METADATA, target.constructor, key) || {};\n    const hasParamData = isNil(data) || isString(data);\n    const paramData = hasParamData ? data : undefined;\n    const paramPipes = hasParamData ? pipes : [data, ...pipes];\n\n    Reflect.defineMetadata(\n      PARAM_ARGS_METADATA,\n      assignMetadata(args, paramtype, index, paramData, ...paramPipes),\n      target.constructor,\n      key,\n    );\n  };\n"]}