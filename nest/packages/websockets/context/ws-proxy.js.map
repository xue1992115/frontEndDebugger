{"version":3,"file":"ws-proxy.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/websockets/","sources":["context/ws-proxy.ts"],"names":[],"mappings":";;;AAAA,wFAAmF;AACnF,+BAA2C;AAC3C,8CAA4C;AAG5C,MAAa,OAAO;IACX,MAAM,CACX,cAAoD,EACpD,iBAAsC;QAEtC,OAAO,KAAK,EAAE,GAAG,IAAe,EAAE,EAAE;YAClC,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,cAAc,CAAC,GAAG,IAAI,CAAC,CAAC;gBAC7C,OAAO,CAAC,IAAA,mBAAY,EAAC,MAAM,CAAC;oBAC1B,CAAC,CAAC,MAAM;oBACR,CAAC,CAAC,MAAM,CAAC,IAAI,CACT,IAAA,sBAAU,EAAC,KAAK,CAAC,EAAE;wBACjB,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;wBACjD,OAAO,YAAK,CAAC;oBACf,CAAC,CAAC,CACH,CAAC;aACP;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;aAClD;QACH,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CACT,iBAAsC,EACtC,IAAe,EACf,KAAQ;QAER,MAAM,IAAI,GAAG,IAAI,6CAAoB,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACnB,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACxC,CAAC;CACF;AA/BD,0BA+BC","sourcesContent":["import { ExecutionContextHost } from '@nestjs/core/helpers/execution-context-host';\nimport { EMPTY, isObservable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { WsExceptionsHandler } from '../exceptions/ws-exceptions-handler';\n\nexport class WsProxy {\n  public create(\n    targetCallback: (...args: unknown[]) => Promise<any>,\n    exceptionsHandler: WsExceptionsHandler,\n  ): (...args: unknown[]) => Promise<any> {\n    return async (...args: unknown[]) => {\n      try {\n        const result = await targetCallback(...args);\n        return !isObservable(result)\n          ? result\n          : result.pipe(\n              catchError(error => {\n                this.handleError(exceptionsHandler, args, error);\n                return EMPTY;\n              }),\n            );\n      } catch (error) {\n        this.handleError(exceptionsHandler, args, error);\n      }\n    };\n  }\n\n  handleError<T>(\n    exceptionsHandler: WsExceptionsHandler,\n    args: unknown[],\n    error: T,\n  ) {\n    const host = new ExecutionContextHost(args);\n    host.setType('ws');\n    exceptionsHandler.handle(error, host);\n  }\n}\n"]}