{"version":3,"file":"exception-filters-context.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/websockets/","sources":["context/exception-filters-context.ts"],"names":[],"mappings":";;;AAAA,wDAAsE;AACtE,oEAA4D;AAC5D,yGAAmG;AAEnG,+EAA0E;AAE1E;;GAEG;AACH,MAAa,uBAAwB,SAAQ,0DAA0B;IACrE,YAAY,SAAwB;QAClC,KAAK,CAAC,SAAS,CAAC,CAAC;IACnB,CAAC;IAEM,MAAM,CACX,QAAgB,EAChB,QAAsD,EACtD,SAAiB;QAEjB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAE/B,MAAM,gBAAgB,GAAG,IAAI,2CAAmB,EAAE,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAChC,QAAQ,EACR,QAAQ,EACR,sCAA0B,CAC3B,CAAC;QACF,IAAI,IAAA,sBAAO,EAAC,OAAO,CAAC,EAAE;YACpB,OAAO,gBAAgB,CAAC;SACzB;QACD,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;QACrD,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAEM,iBAAiB;QACtB,OAAO,EAAO,CAAC;IACjB,CAAC;CACF;AA5BD,0DA4BC","sourcesContent":["import { EXCEPTION_FILTERS_METADATA } from '@nestjs/common/constants';\nimport { isEmpty } from '@nestjs/common/utils/shared.utils';\nimport { BaseExceptionFilterContext } from '@nestjs/core/exceptions/base-exception-filter-context';\nimport { NestContainer } from '@nestjs/core/injector/container';\nimport { WsExceptionsHandler } from '../exceptions/ws-exceptions-handler';\n\n/**\n * @publicApi\n */\nexport class ExceptionFiltersContext extends BaseExceptionFilterContext {\n  constructor(container: NestContainer) {\n    super(container);\n  }\n\n  public create(\n    instance: object,\n    callback: <TClient>(client: TClient, data: any) => any,\n    moduleKey: string,\n  ): WsExceptionsHandler {\n    this.moduleContext = moduleKey;\n\n    const exceptionHandler = new WsExceptionsHandler();\n    const filters = this.createContext(\n      instance,\n      callback,\n      EXCEPTION_FILTERS_METADATA,\n    );\n    if (isEmpty(filters)) {\n      return exceptionHandler;\n    }\n    exceptionHandler.setCustomFilters(filters.reverse());\n    return exceptionHandler;\n  }\n\n  public getGlobalMetadata<T extends any[]>(): T {\n    return [] as T;\n  }\n}\n"]}