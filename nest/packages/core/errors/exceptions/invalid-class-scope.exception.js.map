{"version":3,"file":"invalid-class-scope.exception.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/core/","sources":["errors/exceptions/invalid-class-scope.exception.ts"],"names":[],"mappings":";;;AACA,oEAA+D;AAC/D,0CAA0D;AAC1D,2DAAuD;AAEvD,MAAa,0BAA2B,SAAQ,oCAAgB;IAC9D,YAAY,eAA4D;QACtE,IAAI,IAAI,GAAG,IAAA,yBAAU,EAAC,eAAe,CAAC;YACpC,CAAC,CAAE,eAA4B,CAAC,IAAI;YACpC,CAAC,CAAC,eAAe,CAAC;QACpB,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAE/B,KAAK,CAAC,IAAA,sCAA2B,EAAA,GAAG,IAAI,EAAE,CAAC,CAAC;IAC9C,CAAC;CACF;AATD,gEASC","sourcesContent":["import { Abstract, Type } from '@nestjs/common/interfaces';\nimport { isFunction } from '@nestjs/common/utils/shared.utils';\nimport { INVALID_CLASS_SCOPE_MESSAGE } from '../messages';\nimport { RuntimeException } from './runtime.exception';\n\nexport class InvalidClassScopeException extends RuntimeException {\n  constructor(metatypeOrToken: Type<any> | Abstract<any> | string | symbol) {\n    let name = isFunction(metatypeOrToken)\n      ? (metatypeOrToken as Function).name\n      : metatypeOrToken;\n    name = name && name.toString();\n\n    super(INVALID_CLASS_SCOPE_MESSAGE`${name}`);\n  }\n}\n"]}