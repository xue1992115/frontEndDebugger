{"version":3,"file":"application-config.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/core/","sources":["application-config.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  CanActivate,\n  ExceptionFilter,\n  NestInterceptor,\n  PipeTransform,\n  VersioningOptions,\n  WebSocketAdapter,\n} from '@nestjs/common';\nimport { GlobalPrefixOptions } from '@nestjs/common/interfaces';\nimport { InstanceWrapper } from './injector/instance-wrapper';\nimport { ExcludeRouteMetadata } from './router/interfaces/exclude-route-metadata.interface';\n\nexport class ApplicationConfig {\n  private globalPrefix = '';\n  private globalPrefixOptions: GlobalPrefixOptions<ExcludeRouteMetadata> = {};\n  private globalPipes: Array<PipeTransform> = [];\n  private globalFilters: Array<ExceptionFilter> = [];\n  private globalInterceptors: Array<NestInterceptor> = [];\n  private globalGuards: Array<CanActivate> = [];\n  private versioningOptions: VersioningOptions;\n  private readonly globalRequestPipes: InstanceWrapper<PipeTransform>[] = [];\n  private readonly globalRequestFilters: InstanceWrapper<ExceptionFilter>[] =\n    [];\n  private readonly globalRequestInterceptors: InstanceWrapper<NestInterceptor>[] =\n    [];\n  private readonly globalRequestGuards: InstanceWrapper<CanActivate>[] = [];\n\n  constructor(private ioAdapter: WebSocketAdapter | null = null) {}\n\n  public setGlobalPrefix(prefix: string) {\n    this.globalPrefix = prefix;\n  }\n\n  public getGlobalPrefix() {\n    return this.globalPrefix;\n  }\n\n  public setGlobalPrefixOptions(\n    options: GlobalPrefixOptions<ExcludeRouteMetadata>,\n  ) {\n    this.globalPrefixOptions = options;\n  }\n\n  public getGlobalPrefixOptions(): GlobalPrefixOptions<ExcludeRouteMetadata> {\n    return this.globalPrefixOptions;\n  }\n\n  public setIoAdapter(ioAdapter: WebSocketAdapter) {\n    this.ioAdapter = ioAdapter;\n  }\n\n  public getIoAdapter(): WebSocketAdapter {\n    return this.ioAdapter;\n  }\n\n  public addGlobalPipe(pipe: PipeTransform<any>) {\n    this.globalPipes.push(pipe);\n  }\n\n  public useGlobalPipes(...pipes: PipeTransform<any>[]) {\n    this.globalPipes = this.globalPipes.concat(pipes);\n  }\n\n  public getGlobalFilters(): ExceptionFilter[] {\n    return this.globalFilters;\n  }\n\n  public addGlobalFilter(filter: ExceptionFilter) {\n    this.globalFilters.push(filter);\n  }\n\n  public useGlobalFilters(...filters: ExceptionFilter[]) {\n    this.globalFilters = this.globalFilters.concat(filters);\n  }\n\n  public getGlobalPipes(): PipeTransform<any>[] {\n    return this.globalPipes;\n  }\n\n  public getGlobalInterceptors(): NestInterceptor[] {\n    return this.globalInterceptors;\n  }\n\n  public addGlobalInterceptor(interceptor: NestInterceptor) {\n    this.globalInterceptors.push(interceptor);\n  }\n\n  public useGlobalInterceptors(...interceptors: NestInterceptor[]) {\n    this.globalInterceptors = this.globalInterceptors.concat(interceptors);\n  }\n\n  public getGlobalGuards(): CanActivate[] {\n    return this.globalGuards;\n  }\n\n  public addGlobalGuard(guard: CanActivate) {\n    this.globalGuards.push(guard);\n  }\n\n  public useGlobalGuards(...guards: CanActivate[]) {\n    this.globalGuards = this.globalGuards.concat(guards);\n  }\n\n  public addGlobalRequestInterceptor(\n    wrapper: InstanceWrapper<NestInterceptor>,\n  ) {\n    this.globalRequestInterceptors.push(wrapper);\n  }\n\n  public getGlobalRequestInterceptors(): InstanceWrapper<NestInterceptor>[] {\n    return this.globalRequestInterceptors;\n  }\n\n  public addGlobalRequestPipe(wrapper: InstanceWrapper<PipeTransform>) {\n    this.globalRequestPipes.push(wrapper);\n  }\n\n  public getGlobalRequestPipes(): InstanceWrapper<PipeTransform>[] {\n    return this.globalRequestPipes;\n  }\n\n  public addGlobalRequestFilter(wrapper: InstanceWrapper<ExceptionFilter>) {\n    this.globalRequestFilters.push(wrapper);\n  }\n\n  public getGlobalRequestFilters(): InstanceWrapper<ExceptionFilter>[] {\n    return this.globalRequestFilters;\n  }\n\n  public addGlobalRequestGuard(wrapper: InstanceWrapper<CanActivate>) {\n    this.globalRequestGuards.push(wrapper);\n  }\n\n  public getGlobalRequestGuards(): InstanceWrapper<CanActivate>[] {\n    return this.globalRequestGuards;\n  }\n\n  public enableVersioning(options: VersioningOptions): void {\n    if (Array.isArray(options.defaultVersion)) {\n      // Drop duplicated versions\n      options.defaultVersion = Array.from(new Set(options.defaultVersion));\n    }\n\n    this.versioningOptions = options;\n  }\n\n  public getVersioning(): VersioningOptions | undefined {\n    return this.versioningOptions;\n  }\n}\n"]}