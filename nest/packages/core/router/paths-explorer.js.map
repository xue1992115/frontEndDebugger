{"version":3,"file":"paths-explorer.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/core/","sources":["router/paths-explorer.ts"],"names":[],"mappings":";;;AAAA,wDAIkC;AAIlC,oEAI2C;AAY3C,MAAa,aAAa;IACxB,YAA6B,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAE1D,YAAY,CACjB,QAAoB,EACpB,SAAkB;QAElB,MAAM,iBAAiB,GAAG,IAAA,0BAAW,EAAC,SAAS,CAAC;YAC9C,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC;YACjC,CAAC,CAAC,SAAS,CAAC;QAEd,OAAO,IAAI,CAAC,eAAe;aACxB,iBAAiB,CAAC,iBAAiB,CAAC;aACpC,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;YACtB,MAAM,KAAK,GAAG,IAAI,CAAC,qBAAqB,CACtC,QAAQ,EACR,iBAAiB,EACjB,MAAM,CACP,CAAC;YAEF,IAAI,KAAK,EAAE;gBACT,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACjB;YAED,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAAE,CAAC,CAAC;IACX,CAAC;IAEM,qBAAqB,CAC1B,QAAoB,EACpB,SAAiB,EACjB,UAAkB;QAElB,MAAM,gBAAgB,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC9C,MAAM,iBAAiB,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;QAChD,MAAM,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,yBAAa,EAAE,iBAAiB,CAAC,CAAC;QACxE,IAAI,IAAA,0BAAW,EAAC,SAAS,CAAC,EAAE;YAC1B,OAAO,IAAI,CAAC;SACb;QACD,MAAM,aAAa,GAAkB,OAAO,CAAC,WAAW,CACtD,2BAAe,EACf,iBAAiB,CAClB,CAAC;QACF,MAAM,OAAO,GAA6B,OAAO,CAAC,WAAW,CAC3D,4BAAgB,EAChB,iBAAiB,CAClB,CAAC;QACF,MAAM,IAAI,GAAG,IAAA,uBAAQ,EAAC,SAAS,CAAC;YAC9B,CAAC,CAAC,CAAC,IAAA,8BAAe,EAAC,SAAS,CAAC,CAAC;YAC9B,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,IAAA,8BAAe,EAAC,CAAC,CAAC,CAAC,CAAC;QAErD,OAAO;YACL,IAAI;YACJ,aAAa;YACb,cAAc,EAAE,gBAAgB;YAChC,UAAU;YACV,OAAO;SACR,CAAC;IACJ,CAAC;CACF;AA3DD,sCA2DC","sourcesContent":["import {\n  METHOD_METADATA,\n  PATH_METADATA,\n  VERSION_METADATA,\n} from '@nestjs/common/constants';\nimport { RequestMethod } from '@nestjs/common/enums';\nimport { Controller } from '@nestjs/common/interfaces/controllers/controller.interface';\nimport { VersionValue } from '@nestjs/common/interfaces/version-options.interface';\nimport {\n  addLeadingSlash,\n  isString,\n  isUndefined,\n} from '@nestjs/common/utils/shared.utils';\nimport { MetadataScanner } from '../metadata-scanner';\nimport { RouterProxyCallback } from './router-proxy';\n\nexport interface RouteDefinition {\n  path: string[];\n  requestMethod: RequestMethod;\n  targetCallback: RouterProxyCallback;\n  methodName: string;\n  version?: VersionValue;\n}\n\nexport class PathsExplorer {\n  constructor(private readonly metadataScanner: MetadataScanner) {}\n\n  public scanForPaths(\n    instance: Controller,\n    prototype?: object,\n  ): RouteDefinition[] {\n    const instancePrototype = isUndefined(prototype)\n      ? Object.getPrototypeOf(instance)\n      : prototype;\n\n    return this.metadataScanner\n      .getAllMethodNames(instancePrototype)\n      .reduce((acc, method) => {\n        const route = this.exploreMethodMetadata(\n          instance,\n          instancePrototype,\n          method,\n        );\n\n        if (route) {\n          acc.push(route);\n        }\n\n        return acc;\n      }, []);\n  }\n\n  public exploreMethodMetadata(\n    instance: Controller,\n    prototype: object,\n    methodName: string,\n  ): RouteDefinition | null {\n    const instanceCallback = instance[methodName];\n    const prototypeCallback = prototype[methodName];\n    const routePath = Reflect.getMetadata(PATH_METADATA, prototypeCallback);\n    if (isUndefined(routePath)) {\n      return null;\n    }\n    const requestMethod: RequestMethod = Reflect.getMetadata(\n      METHOD_METADATA,\n      prototypeCallback,\n    );\n    const version: VersionValue | undefined = Reflect.getMetadata(\n      VERSION_METADATA,\n      prototypeCallback,\n    );\n    const path = isString(routePath)\n      ? [addLeadingSlash(routePath)]\n      : routePath.map((p: string) => addLeadingSlash(p));\n\n    return {\n      path,\n      requestMethod,\n      targetCallback: instanceCallback,\n      methodName,\n      version,\n    };\n  }\n}\n"]}