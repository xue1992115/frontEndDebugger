{"version":3,"file":"route-params-factory.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/core/","sources":["router/route-params-factory.ts"],"names":[],"mappings":";;;AAAA,sFAA6E;AAG7E,MAAa,kBAAkB;IACtB,mBAAmB,CAKxB,GAA6B,EAC7B,IAA2B,EAC3B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAqD;QAErE,QAAQ,GAAG,EAAE;YACX,KAAK,uCAAe,CAAC,IAAI;gBACvB,OAAO,IAAW,CAAC;YACrB,KAAK,uCAAe,CAAC,OAAO;gBAC1B,OAAO,GAAU,CAAC;YACpB,KAAK,uCAAe,CAAC,QAAQ;gBAC3B,OAAO,GAAU,CAAC;YACpB,KAAK,uCAAe,CAAC,IAAI;gBACvB,OAAO,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;YACtD,KAAK,uCAAe,CAAC,KAAK;gBACxB,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;YAC9C,KAAK,uCAAe,CAAC,IAAI;gBACvB,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACpC,KAAK,uCAAe,CAAC,KAAK;gBACxB,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;YAC5C,KAAK,uCAAe,CAAC,OAAO;gBAC1B,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;YAC9D,KAAK,uCAAe,CAAC,OAAO;gBAC1B,OAAO,GAAG,CAAC,OAAO,CAAC;YACrB,KAAK,uCAAe,CAAC,IAAI;gBACvB,OAAO,GAAG,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;YAC7B,KAAK,uCAAe,CAAC,KAAK;gBACxB,OAAO,GAAG,CAAC,KAAK,CAAC;YACnB,KAAK,uCAAe,CAAC,EAAE;gBACrB,OAAO,GAAG,CAAC,EAAE,CAAC;YAChB;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC;CACF;AAxCD,gDAwCC","sourcesContent":["import { RouteParamtypes } from '@nestjs/common/enums/route-paramtypes.enum';\nimport { IRouteParamsFactory } from './interfaces/route-params-factory.interface';\n\nexport class RouteParamsFactory implements IRouteParamsFactory {\n  public exchangeKeyForValue<\n    TRequest extends Record<string, any> = any,\n    TResponse = any,\n    TResult = any,\n  >(\n    key: RouteParamtypes | string,\n    data: string | object | any,\n    { req, res, next }: { req: TRequest; res: TResponse; next: Function },\n  ): TResult {\n    switch (key) {\n      case RouteParamtypes.NEXT:\n        return next as any;\n      case RouteParamtypes.REQUEST:\n        return req as any;\n      case RouteParamtypes.RESPONSE:\n        return res as any;\n      case RouteParamtypes.BODY:\n        return data && req.body ? req.body[data] : req.body;\n      case RouteParamtypes.PARAM:\n        return data ? req.params[data] : req.params;\n      case RouteParamtypes.HOST:\n        const hosts = req.hosts || {};\n        return data ? hosts[data] : hosts;\n      case RouteParamtypes.QUERY:\n        return data ? req.query[data] : req.query;\n      case RouteParamtypes.HEADERS:\n        return data ? req.headers[data.toLowerCase()] : req.headers;\n      case RouteParamtypes.SESSION:\n        return req.session;\n      case RouteParamtypes.FILE:\n        return req[data || 'file'];\n      case RouteParamtypes.FILES:\n        return req.files;\n      case RouteParamtypes.IP:\n        return req.ip;\n      default:\n        return null;\n    }\n  }\n}\n"]}