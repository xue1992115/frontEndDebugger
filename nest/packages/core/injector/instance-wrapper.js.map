{"version":3,"file":"instance-wrapper.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/core/","sources":["injector/instance-wrapper.ts"],"names":[],"mappings":"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","sourcesContent":["import { Logger, LoggerService, Provider, Scope, Type } from '@nestjs/common';\nimport { EnhancerSubtype } from '@nestjs/common/constants';\nimport { FactoryProvider } from '@nestjs/common/interfaces';\nimport { clc } from '@nestjs/common/utils/cli-colors.util';\nimport { randomStringGenerator } from '@nestjs/common/utils/random-string-generator.util';\nimport {\n  isNil,\n  isString,\n  isUndefined,\n} from '@nestjs/common/utils/shared.utils';\nimport { iterate } from 'iterare';\nimport { UuidFactory } from '../inspector/uuid-factory';\nimport { STATIC_CONTEXT } from './constants';\nimport {\n  isClassProvider,\n  isFactoryProvider,\n  isValueProvider,\n} from './helpers/provider-classifier';\nimport { InstanceToken, Module } from './module';\n\nexport const INSTANCE_METADATA_SYMBOL = Symbol.for('instance_metadata:cache');\nexport const INSTANCE_ID_SYMBOL = Symbol.for('instance_metadata:id');\n\nexport interface HostComponentInfo {\n  /**\n   * Injection token (or class reference)\n   */\n  token: InstanceToken;\n  /**\n   * Flag that indicates whether DI subtree is durable\n   */\n  isTreeDurable: boolean;\n}\n\nexport interface ContextId {\n  readonly id: number;\n  payload?: unknown;\n  getParent?(info: HostComponentInfo): ContextId;\n}\n\nexport interface InstancePerContext<T> {\n  instance: T;\n  isResolved?: boolean;\n  isPending?: boolean;\n  donePromise?: Promise<unknown>;\n}\n\nexport interface PropertyMetadata {\n  key: symbol | string;\n  wrapper: InstanceWrapper;\n}\n\ninterface InstanceMetadataStore {\n  dependencies?: InstanceWrapper[];\n  properties?: PropertyMetadata[];\n  enhancers?: InstanceWrapper[];\n}\n\nexport class InstanceWrapper<T = any> {\n  public readonly name: any;\n  public readonly token: InstanceToken;\n  public readonly async?: boolean;\n  public readonly host?: Module;\n  public readonly isAlias: boolean = false;\n  public readonly subtype?: EnhancerSubtype;\n\n  public scope?: Scope = Scope.DEFAULT;\n  public metatype: Type<T> | Function;\n  public inject?: FactoryProvider['inject'];\n  public forwardRef?: boolean;\n  public durable?: boolean;\n  public initTime?: number;\n\n  private static logger: LoggerService = new Logger(InstanceWrapper.name);\n\n  private readonly values = new WeakMap<ContextId, InstancePerContext<T>>();\n  private readonly [INSTANCE_METADATA_SYMBOL]: InstanceMetadataStore = {};\n  private readonly [INSTANCE_ID_SYMBOL]: string;\n  private transientMap?:\n    | Map<string, WeakMap<ContextId, InstancePerContext<T>>>\n    | undefined;\n  private isTreeStatic: boolean | undefined;\n  private isTreeDurable: boolean | undefined;\n\n  constructor(\n    metadata: Partial<InstanceWrapper<T>> & Partial<InstancePerContext<T>> = {},\n  ) {\n    this.initialize(metadata);\n    this[INSTANCE_ID_SYMBOL] =\n      metadata[INSTANCE_ID_SYMBOL] ?? this.generateUuid();\n  }\n\n  get id(): string {\n    return this[INSTANCE_ID_SYMBOL];\n  }\n\n  set instance(value: T) {\n    this.values.set(STATIC_CONTEXT, { instance: value });\n  }\n\n  get instance(): T {\n    const instancePerContext = this.getInstanceByContextId(STATIC_CONTEXT);\n    return instancePerContext.instance;\n  }\n\n  get isNotMetatype(): boolean {\n    const isFactory = this.metatype && !isNil(this.inject);\n    return !this.metatype || isFactory;\n  }\n\n  get isTransient(): boolean {\n    return this.scope === Scope.TRANSIENT;\n  }\n\n  public getInstanceByContextId(\n    contextId: ContextId,\n    inquirerId?: string,\n  ): InstancePerContext<T> {\n    if (this.scope === Scope.TRANSIENT && inquirerId) {\n      return this.getInstanceByInquirerId(contextId, inquirerId);\n    }\n    const instancePerContext = this.values.get(contextId);\n    return instancePerContext\n      ? instancePerContext\n      : this.cloneStaticInstance(contextId);\n  }\n\n  public getInstanceByInquirerId(\n    contextId: ContextId,\n    inquirerId: string,\n  ): InstancePerContext<T> {\n    let collectionPerContext = this.transientMap.get(inquirerId);\n    if (!collectionPerContext) {\n      collectionPerContext = new WeakMap();\n      this.transientMap.set(inquirerId, collectionPerContext);\n    }\n    const instancePerContext = collectionPerContext.get(contextId);\n    return instancePerContext\n      ? instancePerContext\n      : this.cloneTransientInstance(contextId, inquirerId);\n  }\n\n  public setInstanceByContextId(\n    contextId: ContextId,\n    value: InstancePerContext<T>,\n    inquirerId?: string,\n  ) {\n    if (this.scope === Scope.TRANSIENT && inquirerId) {\n      return this.setInstanceByInquirerId(contextId, inquirerId, value);\n    }\n    this.values.set(contextId, value);\n  }\n\n  public setInstanceByInquirerId(\n    contextId: ContextId,\n    inquirerId: string,\n    value: InstancePerContext<T>,\n  ) {\n    let collection = this.transientMap.get(inquirerId);\n    if (!collection) {\n      collection = new WeakMap();\n      this.transientMap.set(inquirerId, collection);\n    }\n    collection.set(contextId, value);\n  }\n\n  public addCtorMetadata(index: number, wrapper: InstanceWrapper) {\n    if (!this[INSTANCE_METADATA_SYMBOL].dependencies) {\n      this[INSTANCE_METADATA_SYMBOL].dependencies = [];\n    }\n    this[INSTANCE_METADATA_SYMBOL].dependencies[index] = wrapper;\n  }\n\n  public getCtorMetadata(): InstanceWrapper[] {\n    return this[INSTANCE_METADATA_SYMBOL].dependencies;\n  }\n\n  public addPropertiesMetadata(key: symbol | string, wrapper: InstanceWrapper) {\n    if (!this[INSTANCE_METADATA_SYMBOL].properties) {\n      this[INSTANCE_METADATA_SYMBOL].properties = [];\n    }\n    this[INSTANCE_METADATA_SYMBOL].properties.push({\n      key,\n      wrapper,\n    });\n  }\n\n  public getPropertiesMetadata(): PropertyMetadata[] {\n    return this[INSTANCE_METADATA_SYMBOL].properties;\n  }\n\n  public addEnhancerMetadata(wrapper: InstanceWrapper) {\n    if (!this[INSTANCE_METADATA_SYMBOL].enhancers) {\n      this[INSTANCE_METADATA_SYMBOL].enhancers = [];\n    }\n    this[INSTANCE_METADATA_SYMBOL].enhancers.push(wrapper);\n  }\n\n  public getEnhancersMetadata(): InstanceWrapper[] {\n    return this[INSTANCE_METADATA_SYMBOL].enhancers;\n  }\n\n  public isDependencyTreeDurable(lookupRegistry: string[] = []): boolean {\n    if (!isUndefined(this.isTreeDurable)) {\n      return this.isTreeDurable;\n    }\n    if (this.scope === Scope.REQUEST) {\n      this.isTreeDurable = this.durable === undefined ? false : this.durable;\n      if (this.isTreeDurable) {\n        this.printIntrospectedAsDurable();\n      }\n      return this.isTreeDurable;\n    }\n    const isStatic = this.isDependencyTreeStatic();\n    if (isStatic) {\n      return false;\n    }\n\n    const isTreeNonDurable = this.introspectDepsAttribute(\n      (collection, registry) =>\n        collection.some(\n          (item: InstanceWrapper) =>\n            !item.isDependencyTreeStatic() &&\n            !item.isDependencyTreeDurable(registry),\n        ),\n      lookupRegistry,\n    );\n    this.isTreeDurable = !isTreeNonDurable;\n    if (this.isTreeDurable) {\n      this.printIntrospectedAsDurable();\n    }\n    return this.isTreeDurable;\n  }\n\n  public introspectDepsAttribute(\n    callback: (\n      collection: InstanceWrapper[],\n      lookupRegistry: string[],\n    ) => boolean,\n    lookupRegistry: string[] = [],\n  ): boolean {\n    if (lookupRegistry.includes(this[INSTANCE_ID_SYMBOL])) {\n      return false;\n    }\n    lookupRegistry = lookupRegistry.concat(this[INSTANCE_ID_SYMBOL]);\n\n    const { dependencies, properties, enhancers } =\n      this[INSTANCE_METADATA_SYMBOL];\n\n    let introspectionResult = dependencies\n      ? callback(dependencies, lookupRegistry)\n      : false;\n\n    if (introspectionResult || !(properties || enhancers)) {\n      return introspectionResult;\n    }\n    introspectionResult = properties\n      ? callback(\n          properties.map(item => item.wrapper),\n          lookupRegistry,\n        )\n      : false;\n    if (introspectionResult || !enhancers) {\n      return introspectionResult;\n    }\n    return enhancers ? callback(enhancers, lookupRegistry) : false;\n  }\n\n  public isDependencyTreeStatic(lookupRegistry: string[] = []): boolean {\n    if (!isUndefined(this.isTreeStatic)) {\n      return this.isTreeStatic;\n    }\n    if (this.scope === Scope.REQUEST) {\n      this.isTreeStatic = false;\n      this.printIntrospectedAsRequestScoped();\n      return this.isTreeStatic;\n    }\n    this.isTreeStatic = !this.introspectDepsAttribute(\n      (collection, registry) =>\n        collection.some(\n          (item: InstanceWrapper) => !item.isDependencyTreeStatic(registry),\n        ),\n      lookupRegistry,\n    );\n    if (!this.isTreeStatic) {\n      this.printIntrospectedAsRequestScoped();\n    }\n    return this.isTreeStatic;\n  }\n\n  public cloneStaticInstance(contextId: ContextId): InstancePerContext<T> {\n    const staticInstance = this.getInstanceByContextId(STATIC_CONTEXT);\n    if (this.isDependencyTreeStatic()) {\n      return staticInstance;\n    }\n    const instancePerContext: InstancePerContext<T> = {\n      ...staticInstance,\n      instance: undefined,\n      isResolved: false,\n      isPending: false,\n    };\n    if (this.isNewable()) {\n      instancePerContext.instance = Object.create(this.metatype.prototype);\n    }\n    this.setInstanceByContextId(contextId, instancePerContext);\n    return instancePerContext;\n  }\n\n  public cloneTransientInstance(\n    contextId: ContextId,\n    inquirerId: string,\n  ): InstancePerContext<T> {\n    const staticInstance = this.getInstanceByContextId(STATIC_CONTEXT);\n    const instancePerContext: InstancePerContext<T> = {\n      ...staticInstance,\n      instance: undefined,\n      isResolved: false,\n      isPending: false,\n    };\n    if (this.isNewable()) {\n      instancePerContext.instance = Object.create(this.metatype.prototype);\n    }\n    this.setInstanceByInquirerId(contextId, inquirerId, instancePerContext);\n    return instancePerContext;\n  }\n\n  public createPrototype(contextId: ContextId) {\n    const host = this.getInstanceByContextId(contextId);\n    if (!this.isNewable() || host.isResolved) {\n      return;\n    }\n    return Object.create(this.metatype.prototype);\n  }\n\n  public isInRequestScope(\n    contextId: ContextId,\n    inquirer?: InstanceWrapper | undefined,\n  ): boolean {\n    const isDependencyTreeStatic = this.isDependencyTreeStatic();\n\n    return (\n      !isDependencyTreeStatic &&\n      contextId !== STATIC_CONTEXT &&\n      (!this.isTransient || (this.isTransient && !!inquirer))\n    );\n  }\n\n  public isLazyTransient(\n    contextId: ContextId,\n    inquirer: InstanceWrapper | undefined,\n  ): boolean {\n    const isInquirerRequestScoped =\n      inquirer && !inquirer.isDependencyTreeStatic();\n\n    return (\n      this.isDependencyTreeStatic() &&\n      contextId !== STATIC_CONTEXT &&\n      this.isTransient &&\n      isInquirerRequestScoped\n    );\n  }\n\n  public isExplicitlyRequested(\n    contextId: ContextId,\n    inquirer?: InstanceWrapper,\n  ): boolean {\n    const isSelfRequested = inquirer === this;\n    return (\n      this.isDependencyTreeStatic() &&\n      contextId !== STATIC_CONTEXT &&\n      (isSelfRequested || (inquirer && inquirer.scope === Scope.TRANSIENT))\n    );\n  }\n\n  public isStatic(\n    contextId: ContextId,\n    inquirer: InstanceWrapper | undefined,\n  ): boolean {\n    const isInquirerRequestScoped =\n      inquirer && !inquirer.isDependencyTreeStatic();\n    const isStaticTransient = this.isTransient && !isInquirerRequestScoped;\n\n    return (\n      this.isDependencyTreeStatic() &&\n      contextId === STATIC_CONTEXT &&\n      (!this.isTransient ||\n        (isStaticTransient && !!inquirer && !inquirer.isTransient))\n    );\n  }\n\n  public getStaticTransientInstances() {\n    if (!this.transientMap) {\n      return [];\n    }\n    const instances = [...this.transientMap.values()];\n    return iterate(instances)\n      .map(item => item.get(STATIC_CONTEXT))\n      .filter(item => !!item)\n      .toArray();\n  }\n\n  public mergeWith(provider: Provider) {\n    if (isValueProvider(provider)) {\n      this.metatype = null;\n      this.inject = null;\n\n      this.scope = Scope.DEFAULT;\n\n      this.setInstanceByContextId(STATIC_CONTEXT, {\n        instance: provider.useValue,\n        isResolved: true,\n        isPending: false,\n      });\n    } else if (isClassProvider(provider)) {\n      this.inject = null;\n      this.metatype = provider.useClass;\n    } else if (isFactoryProvider(provider)) {\n      this.metatype = provider.useFactory;\n      this.inject = provider.inject || [];\n    }\n  }\n\n  private isNewable(): boolean {\n    return isNil(this.inject) && this.metatype && this.metatype.prototype;\n  }\n\n  private initialize(\n    metadata: Partial<InstanceWrapper<T>> & Partial<InstancePerContext<T>>,\n  ) {\n    const { instance, isResolved, ...wrapperPartial } = metadata;\n    Object.assign(this, wrapperPartial);\n\n    this.setInstanceByContextId(STATIC_CONTEXT, {\n      instance,\n      isResolved,\n    });\n    this.scope === Scope.TRANSIENT && (this.transientMap = new Map());\n  }\n\n  private printIntrospectedAsRequestScoped() {\n    if (!this.isDebugMode() || this.name === 'REQUEST') {\n      return;\n    }\n    if (isString(this.name)) {\n      InstanceWrapper.logger.log(\n        `${clc.cyanBright(this.name)}${clc.green(\n          ' introspected as ',\n        )}${clc.magentaBright('request-scoped')}`,\n      );\n    }\n  }\n\n  private printIntrospectedAsDurable() {\n    if (!this.isDebugMode()) {\n      return;\n    }\n    if (isString(this.name)) {\n      InstanceWrapper.logger.log(\n        `${clc.cyanBright(this.name)}${clc.green(\n          ' introspected as ',\n        )}${clc.magentaBright('durable')}`,\n      );\n    }\n  }\n\n  private isDebugMode(): boolean {\n    return !!process.env.NEST_DEBUG;\n  }\n\n  private generateUuid(): string {\n    let key = this.name?.toString() ?? this.token?.toString();\n    key += this.host?.name ?? '';\n\n    return key ? UuidFactory.get(key) : randomStringGenerator();\n  }\n}\n"]}