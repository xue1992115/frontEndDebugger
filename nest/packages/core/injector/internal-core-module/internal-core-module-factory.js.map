{"version":3,"file":"internal-core-module-factory.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/core/","sources":["injector/internal-core-module/internal-core-module-factory.ts"],"names":[],"mappings":";;;AAAA,2CAAwC;AACxC,qFAAgF;AAChF,uEAAkE;AAElE,uEAAmE;AAInE,0CAAuC;AACvC,wDAAoD;AACpD,iFAA4E;AAC5E,4DAAwD;AACxD,iEAA4D;AAE5D,MAAa,yBAAyB;IACpC,MAAM,CAAC,MAAM,CACX,SAAwB,EACxB,OAA4B,EAC5B,cAA8B,EAC9B,eAAgC,EAChC,cAA8B;QAE9B,MAAM,uBAAuB,GAAG,GAAG,EAAE;YACnC,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,qCAAgB,CAAC,IAAI,EAAE;gBAC/C,SAAS,EAAE,KAAK;aACjB,CAAC,CAAC;YACH,MAAM,QAAQ,GAAG,IAAI,mBAAQ,EAAE,CAAC;YAChC,MAAM,cAAc,GAAG,IAAI,gCAAc,CACvC,SAAS,EACT,QAAQ,EACR,cAAc,EACd,MAAM,CACP,CAAC;YACF,OAAO,IAAI,qCAAgB,CACzB,OAAO,EACP,cAAc,EACd,cAAc,EACd,SAAS,CAAC,UAAU,EAAE,CACvB,CAAC;QACJ,CAAC,CAAC;QAEF,OAAO,yCAAkB,CAAC,QAAQ,CAAC;YACjC;gBACE,OAAO,EAAE,iDAAsB;gBAC/B,QAAQ,EAAE,iDAAsB,CAAC,aAAa,CAAC,SAAS,CAAC;aAC1D;YACD;gBACE,OAAO,EAAE,oCAAgB;gBACzB,QAAQ,EAAE,SAAS,CAAC,UAAU,EAAE;aACjC;YACD;gBACE,OAAO,EAAE,mCAAe;gBACxB,QAAQ,EAAE,eAAe;aAC1B;YACD;gBACE,OAAO,EAAE,mCAAe,CAAC,IAAI;gBAC7B,WAAW,EAAE,mCAAe;aAC7B;YACD;gBACE,OAAO,EAAE,qCAAgB;gBACzB,UAAU,EAAE,uBAAuB;aACpC;YACD;gBACE,OAAO,EAAE,kCAAe;gBACxB,QAAQ,EAAE,SAAS,CAAC,eAAe;aACpC;SACF,CAAC,CAAC;IACL,CAAC;CACF;AAtDD,8DAsDC","sourcesContent":["import { Logger } from '@nestjs/common';\nimport { ExternalContextCreator } from '../../helpers/external-context-creator';\nimport { HttpAdapterHost } from '../../helpers/http-adapter-host';\nimport { GraphInspector } from '../../inspector/graph-inspector';\nimport { SerializedGraph } from '../../inspector/serialized-graph';\nimport { DependenciesScanner } from '../../scanner';\nimport { ModuleCompiler } from '../compiler';\nimport { NestContainer } from '../container';\nimport { Injector } from '../injector';\nimport { InstanceLoader } from '../instance-loader';\nimport { LazyModuleLoader } from '../lazy-module-loader/lazy-module-loader';\nimport { ModulesContainer } from '../modules-container';\nimport { InternalCoreModule } from './internal-core-module';\n\nexport class InternalCoreModuleFactory {\n  static create(\n    container: NestContainer,\n    scanner: DependenciesScanner,\n    moduleCompiler: ModuleCompiler,\n    httpAdapterHost: HttpAdapterHost,\n    graphInspector: GraphInspector,\n  ) {\n    const lazyModuleLoaderFactory = () => {\n      const logger = new Logger(LazyModuleLoader.name, {\n        timestamp: false,\n      });\n      const injector = new Injector();\n      const instanceLoader = new InstanceLoader(\n        container,\n        injector,\n        graphInspector,\n        logger,\n      );\n      return new LazyModuleLoader(\n        scanner,\n        instanceLoader,\n        moduleCompiler,\n        container.getModules(),\n      );\n    };\n\n    return InternalCoreModule.register([\n      {\n        provide: ExternalContextCreator,\n        useValue: ExternalContextCreator.fromContainer(container),\n      },\n      {\n        provide: ModulesContainer,\n        useValue: container.getModules(),\n      },\n      {\n        provide: HttpAdapterHost,\n        useValue: httpAdapterHost,\n      },\n      {\n        provide: HttpAdapterHost.name,\n        useExisting: HttpAdapterHost,\n      },\n      {\n        provide: LazyModuleLoader,\n        useFactory: lazyModuleLoaderFactory,\n      },\n      {\n        provide: SerializedGraph,\n        useValue: container.serializedGraph,\n      },\n    ]);\n  }\n}\n"]}