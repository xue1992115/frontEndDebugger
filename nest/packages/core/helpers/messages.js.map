{"version":3,"file":"messages.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/core/","sources":["helpers/messages.ts"],"names":[],"mappings":";;;AAAA,kFAAyE;AACzE,mGAG6D;AAEtD,MAAM,mBAAmB,GAAG,CACjC,IAA0B,EAC1B,MAAc,EACd,EAAE,CAAC,GAAG,MAAM,2BAA2B,CAAC;AAH7B,QAAA,mBAAmB,uBAGU;AAEnC,MAAM,oBAAoB,GAAG,CAAC,IAAY,EAAE,MAAuB,EAAE,EAAE,CAC5E,WAAW,IAAI,KAAK,mCAAa,CAAC,MAAM,CAAC,SAAS,CAAC;AADxC,QAAA,oBAAoB,wBACoB;AAE9C,MAAM,8BAA8B,GAAG,CAC5C,IAAY,EACZ,MAAuB,EACvB,OAAqB,EACrB,EAAE;IACF,MAAM,kBAAkB,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IACxE,MAAM,QAAQ,GAAG,kBAAkB;SAChC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,2CAAe,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;SACnE,IAAI,CAAC,GAAG,CAAC,CAAC;IAEb,OAAO,WAAW,IAAI,KAAK,mCAAa,CAAC,MAAM,CAAC,eAAe,QAAQ,SAAS,CAAC;AACnF,CAAC,CAAC;AAXW,QAAA,8BAA8B,kCAWzC;AAEK,MAAM,0BAA0B,GAAG,CAAC,IAAY,EAAE,IAAY,EAAE,EAAE,CACvE,GAAG,IAAI,KAAK,IAAI,IAAI,CAAC;AADV,QAAA,0BAA0B,8BAChB;AAEhB,MAAM,oCAAoC,GAAG,CAClD,IAAY,EACZ,IAAY,EACZ,OAAqB,EACrB,EAAE;IACF,MAAM,kBAAkB,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IACxE,MAAM,QAAQ,GAAG,kBAAkB;SAChC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,2CAAe,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;SACnE,IAAI,CAAC,GAAG,CAAC,CAAC;IAEb,OAAO,GAAG,IAAI,KAAK,IAAI,eAAe,QAAQ,IAAI,CAAC;AACrD,CAAC,CAAC;AAXW,QAAA,oCAAoC,wCAW/C;AAEK,MAAM,yBAAyB,GAAG,CACvC,UAAkB,EAClB,cAAsB,EACtB,EAAE,CACF,WAAW,UAAU,uEAAuE,cAAc,IAAI,CAAC;AAJpG,QAAA,yBAAyB,6BAI2E","sourcesContent":["import { RequestMethod } from '@nestjs/common/enums/request-method.enum';\nimport {\n  VersionValue,\n  VERSION_NEUTRAL,\n} from '@nestjs/common/interfaces/version-options.interface';\n\nexport const MODULE_INIT_MESSAGE = (\n  text: TemplateStringsArray,\n  module: string,\n) => `${module} dependencies initialized`;\n\nexport const ROUTE_MAPPED_MESSAGE = (path: string, method: string | number) =>\n  `Mapped {${path}, ${RequestMethod[method]}} route`;\n\nexport const VERSIONED_ROUTE_MAPPED_MESSAGE = (\n  path: string,\n  method: string | number,\n  version: VersionValue,\n) => {\n  const controllerVersions = Array.isArray(version) ? version : [version];\n  const versions = controllerVersions\n    .map(version => (version === VERSION_NEUTRAL ? 'Neutral' : version))\n    .join(',');\n\n  return `Mapped {${path}, ${RequestMethod[method]}} (version: ${versions}) route`;\n};\n\nexport const CONTROLLER_MAPPING_MESSAGE = (name: string, path: string) =>\n  `${name} {${path}}:`;\n\nexport const VERSIONED_CONTROLLER_MAPPING_MESSAGE = (\n  name: string,\n  path: string,\n  version: VersionValue,\n) => {\n  const controllerVersions = Array.isArray(version) ? version : [version];\n  const versions = controllerVersions\n    .map(version => (version === VERSION_NEUTRAL ? 'Neutral' : version))\n    .join(',');\n\n  return `${name} {${path}} (version: ${versions}):`;\n};\n\nexport const INVALID_EXECUTION_CONTEXT = (\n  methodName: string,\n  currentContext: string,\n) =>\n  `Calling ${methodName} is not allowed in this context. Your current execution context is \"${currentContext}\".`;\n"]}