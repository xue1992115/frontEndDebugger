{"version":3,"file":"nest-application.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/core/","sources":["nest-application.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  CanActivate,\n  ExceptionFilter,\n  HttpServer,\n  INestApplication,\n  INestMicroservice,\n  NestHybridApplicationOptions,\n  NestInterceptor,\n  PipeTransform,\n  VersioningOptions,\n  VersioningType,\n  WebSocketAdapter,\n} from '@nestjs/common';\nimport {\n  GlobalPrefixOptions,\n  NestApplicationOptions,\n} from '@nestjs/common/interfaces';\nimport {\n  CorsOptions,\n  CorsOptionsDelegate,\n} from '@nestjs/common/interfaces/external/cors-options.interface';\nimport { Logger } from '@nestjs/common/services/logger.service';\nimport { loadPackage } from '@nestjs/common/utils/load-package.util';\nimport {\n  addLeadingSlash,\n  isFunction,\n  isObject,\n  isString,\n} from '@nestjs/common/utils/shared.utils';\nimport { iterate } from 'iterare';\nimport { platform } from 'os';\nimport { AbstractHttpAdapter } from './adapters';\nimport { ApplicationConfig } from './application-config';\nimport { MESSAGES } from './constants';\nimport { optionalRequire } from './helpers/optional-require';\nimport { NestContainer } from './injector/container';\nimport { Injector } from './injector/injector';\nimport { GraphInspector } from './inspector/graph-inspector';\nimport { MiddlewareContainer } from './middleware/container';\nimport { MiddlewareModule } from './middleware/middleware-module';\nimport { mapToExcludeRoute } from './middleware/utils';\nimport { NestApplicationContext } from './nest-application-context';\nimport { Resolver } from './router/interfaces/resolver.interface';\nimport { RoutesResolver } from './router/routes-resolver';\n\nconst { SocketModule } = optionalRequire(\n  '@nestjs/websockets/socket-module',\n  () => require('@nestjs/websockets/socket-module'),\n);\nconst { MicroservicesModule } = optionalRequire(\n  '@nestjs/microservices/microservices-module',\n  () => require('@nestjs/microservices/microservices-module'),\n);\n\n/**\n * @publicApi\n */\nexport class NestApplication\n  extends NestApplicationContext<NestApplicationOptions>\n  implements INestApplication\n{\n  protected readonly logger = new Logger(NestApplication.name, {\n    timestamp: true,\n  });\n  private readonly middlewareModule: MiddlewareModule;\n  private readonly middlewareContainer = new MiddlewareContainer(\n    this.container,\n  );\n  private readonly microservicesModule =\n    MicroservicesModule && new MicroservicesModule();\n  private readonly socketModule = SocketModule && new SocketModule();\n  private readonly routesResolver: Resolver;\n  private readonly microservices: any[] = [];\n  private httpServer: any;\n  private isListening = false;\n\n  constructor(\n    container: NestContainer,\n    private readonly httpAdapter: HttpServer,\n    private readonly config: ApplicationConfig,\n    private readonly graphInspector: GraphInspector,\n    appOptions: NestApplicationOptions = {},\n  ) {\n    super(container, appOptions);\n\n    this.selectContextModule();\n    this.registerHttpServer();\n    this.injector = new Injector({ preview: this.appOptions.preview });\n    this.middlewareModule = new MiddlewareModule();\n    this.routesResolver = new RoutesResolver(\n      this.container,\n      this.config,\n      this.injector,\n      this.graphInspector,\n    );\n  }\n\n  protected async dispose(): Promise<void> {\n    this.socketModule && (await this.socketModule.close());\n    this.microservicesModule && (await this.microservicesModule.close());\n    this.httpAdapter && (await this.httpAdapter.close());\n\n    await Promise.all(\n      iterate(this.microservices).map(async microservice => {\n        microservice.setIsTerminated(true);\n        await microservice.close();\n      }),\n    );\n  }\n\n  public getHttpAdapter(): AbstractHttpAdapter {\n    return this.httpAdapter as AbstractHttpAdapter;\n  }\n\n  public registerHttpServer() {\n    this.httpServer = this.createServer();\n  }\n\n  public getUnderlyingHttpServer<T>(): T {\n    return this.httpAdapter.getHttpServer();\n  }\n\n  public applyOptions() {\n    if (!this.appOptions || !this.appOptions.cors) {\n      return undefined;\n    }\n    const passCustomOptions =\n      isObject(this.appOptions.cors) || isFunction(this.appOptions.cors);\n    if (!passCustomOptions) {\n      return this.enableCors();\n    }\n    return this.enableCors(\n      this.appOptions.cors as CorsOptions | CorsOptionsDelegate<any>,\n    );\n  }\n\n  public createServer<T = any>(): T {\n    this.httpAdapter.initHttpServer(this.appOptions);\n    return this.httpAdapter.getHttpServer() as T;\n  }\n\n  public async registerModules() {\n    this.registerWsModule();\n\n    if (this.microservicesModule) {\n      this.microservicesModule.register(\n        this.container,\n        this.graphInspector,\n        this.config,\n        this.appOptions,\n      );\n      this.microservicesModule.setupClients(this.container);\n    }\n\n    await this.middlewareModule.register(\n      this.middlewareContainer,\n      this.container,\n      this.config,\n      this.injector,\n      this.httpAdapter,\n      this.graphInspector,\n      this.appOptions,\n    );\n  }\n\n  public registerWsModule() {\n    if (!this.socketModule) {\n      return;\n    }\n    this.socketModule.register(\n      this.container,\n      this.config,\n      this.graphInspector,\n      this.appOptions,\n      this.httpServer,\n    );\n  }\n\n  public async init(): Promise<this> {\n    this.applyOptions();\n    await this.httpAdapter?.init();\n\n    const useBodyParser =\n      this.appOptions && this.appOptions.bodyParser !== false;\n    useBodyParser && this.registerParserMiddleware();\n\n    await this.registerModules();\n    await this.registerRouter();\n    await this.callInitHook();\n    await this.registerRouterHooks();\n    await this.callBootstrapHook();\n\n    this.isInitialized = true;\n    this.logger.log(MESSAGES.APPLICATION_READY);\n    return this;\n  }\n\n  public registerParserMiddleware() {\n    const prefix = this.config.getGlobalPrefix();\n    const rawBody = !!this.appOptions?.rawBody;\n    this.httpAdapter.registerParserMiddleware(prefix, rawBody);\n  }\n\n  public async registerRouter() {\n    await this.registerMiddleware(this.httpAdapter);\n\n    const prefix = this.config.getGlobalPrefix();\n    const basePath = addLeadingSlash(prefix);\n    this.routesResolver.resolve(this.httpAdapter, basePath);\n  }\n\n  public async registerRouterHooks() {\n    this.routesResolver.registerNotFoundHandler();\n    this.routesResolver.registerExceptionHandler();\n  }\n\n  public connectMicroservice<T extends object>(\n    microserviceOptions: T,\n    hybridAppOptions: NestHybridApplicationOptions = {},\n  ): INestMicroservice {\n    const { NestMicroservice } = loadPackage(\n      '@nestjs/microservices',\n      'NestFactory',\n      () => require('@nestjs/microservices'),\n    );\n    const { inheritAppConfig } = hybridAppOptions;\n    const applicationConfig = inheritAppConfig\n      ? this.config\n      : new ApplicationConfig();\n\n    const instance = new NestMicroservice(\n      this.container,\n      microserviceOptions,\n      this.graphInspector,\n      applicationConfig,\n    );\n    instance.registerListeners();\n    instance.setIsInitialized(true);\n    instance.setIsInitHookCalled(true);\n\n    this.microservices.push(instance);\n    return instance;\n  }\n\n  public getMicroservices(): INestMicroservice[] {\n    return this.microservices;\n  }\n\n  public getHttpServer() {\n    return this.httpServer;\n  }\n\n  public async startAllMicroservices(): Promise<this> {\n    this.assertNotInPreviewMode('startAllMicroservices');\n    await Promise.all(this.microservices.map(msvc => msvc.listen()));\n    return this;\n  }\n\n  public use(...args: [any, any?]): this {\n    this.httpAdapter.use(...args);\n    return this;\n  }\n\n  public useBodyParser(...args: [any, any?]): this {\n    if (!('useBodyParser' in this.httpAdapter)) {\n      this.logger.warn('Your HTTP Adapter does not support `.useBodyParser`.');\n      return this;\n    }\n\n    const [parserType, ...otherArgs] = args;\n    const rawBody = !!this.appOptions.rawBody;\n\n    this.httpAdapter.useBodyParser(...[parserType, rawBody, ...otherArgs]);\n\n    return this;\n  }\n\n  public enableCors(options?: CorsOptions | CorsOptionsDelegate<any>): void {\n    this.httpAdapter.enableCors(options);\n  }\n\n  public enableVersioning(\n    options: VersioningOptions = { type: VersioningType.URI },\n  ): this {\n    this.config.enableVersioning(options);\n    return this;\n  }\n\n  public async listen(port: number | string): Promise<any>;\n  public async listen(port: number | string, hostname: string): Promise<any>;\n  public async listen(port: number | string, ...args: any[]): Promise<any> {\n    this.assertNotInPreviewMode('listen');\n    !this.isInitialized && (await this.init());\n\n    return new Promise((resolve, reject) => {\n      const errorHandler = (e: any) => {\n        this.logger.error(e?.toString?.());\n        reject(e);\n      };\n      this.httpServer.once('error', errorHandler);\n\n      const isCallbackInOriginalArgs = isFunction(args[args.length - 1]);\n      const listenFnArgs = isCallbackInOriginalArgs\n        ? args.slice(0, args.length - 1)\n        : args;\n\n      this.httpAdapter.listen(\n        port,\n        ...listenFnArgs,\n        (...originalCallbackArgs: unknown[]) => {\n          if (this.appOptions?.autoFlushLogs ?? true) {\n            this.flushLogs();\n          }\n          if (originalCallbackArgs[0] instanceof Error) {\n            return reject(originalCallbackArgs[0]);\n          }\n\n          const address = this.httpServer.address();\n          if (address) {\n            this.httpServer.removeListener('error', errorHandler);\n            this.isListening = true;\n            resolve(this.httpServer);\n          }\n          if (isCallbackInOriginalArgs) {\n            args[args.length - 1](...originalCallbackArgs);\n          }\n        },\n      );\n    });\n  }\n\n  public async getUrl(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      if (!this.isListening) {\n        this.logger.error(MESSAGES.CALL_LISTEN_FIRST);\n        reject(MESSAGES.CALL_LISTEN_FIRST);\n        return;\n      }\n      const address = this.httpServer.address();\n      resolve(this.formatAddress(address));\n    });\n  }\n\n  private formatAddress(address: any): string {\n    if (isString(address)) {\n      if (platform() === 'win32') {\n        return address;\n      }\n      const basePath = encodeURIComponent(address);\n      return `${this.getProtocol()}+unix://${basePath}`;\n    }\n\n    let host = this.host();\n    if (address && address.family === 'IPv6') {\n      if (host === '::') {\n        host = '[::1]';\n      } else {\n        host = `[${host}]`;\n      }\n    } else if (host === '0.0.0.0') {\n      host = '127.0.0.1';\n    }\n\n    return `${this.getProtocol()}://${host}:${address.port}`;\n  }\n\n  public setGlobalPrefix(prefix: string, options?: GlobalPrefixOptions): this {\n    this.config.setGlobalPrefix(prefix);\n    if (options) {\n      const exclude = options?.exclude\n        ? mapToExcludeRoute(options.exclude)\n        : [];\n      this.config.setGlobalPrefixOptions({\n        ...options,\n        exclude,\n      });\n    }\n    return this;\n  }\n\n  public useWebSocketAdapter(adapter: WebSocketAdapter): this {\n    this.config.setIoAdapter(adapter);\n    return this;\n  }\n\n  public useGlobalFilters(...filters: ExceptionFilter[]): this {\n    this.config.useGlobalFilters(...filters);\n    filters.forEach(item =>\n      this.graphInspector.insertOrphanedEnhancer({\n        subtype: 'filter',\n        ref: item,\n      }),\n    );\n    return this;\n  }\n\n  public useGlobalPipes(...pipes: PipeTransform<any>[]): this {\n    this.config.useGlobalPipes(...pipes);\n    pipes.forEach(item =>\n      this.graphInspector.insertOrphanedEnhancer({\n        subtype: 'pipe',\n        ref: item,\n      }),\n    );\n    return this;\n  }\n\n  public useGlobalInterceptors(...interceptors: NestInterceptor[]): this {\n    this.config.useGlobalInterceptors(...interceptors);\n    interceptors.forEach(item =>\n      this.graphInspector.insertOrphanedEnhancer({\n        subtype: 'interceptor',\n        ref: item,\n      }),\n    );\n    return this;\n  }\n\n  public useGlobalGuards(...guards: CanActivate[]): this {\n    this.config.useGlobalGuards(...guards);\n    guards.forEach(item =>\n      this.graphInspector.insertOrphanedEnhancer({\n        subtype: 'guard',\n        ref: item,\n      }),\n    );\n    return this;\n  }\n\n  public useStaticAssets(options: any): this;\n  public useStaticAssets(path: string, options?: any): this;\n  public useStaticAssets(pathOrOptions: any, options?: any): this {\n    this.httpAdapter.useStaticAssets &&\n      this.httpAdapter.useStaticAssets(pathOrOptions, options);\n    return this;\n  }\n\n  public setBaseViewsDir(path: string | string[]): this {\n    this.httpAdapter.setBaseViewsDir && this.httpAdapter.setBaseViewsDir(path);\n    return this;\n  }\n\n  public setViewEngine(engineOrOptions: any): this {\n    this.httpAdapter.setViewEngine &&\n      this.httpAdapter.setViewEngine(engineOrOptions);\n    return this;\n  }\n  private host(): string | undefined {\n    const address = this.httpServer.address();\n    if (isString(address)) {\n      return undefined;\n    }\n    return address && address.address;\n  }\n\n  private getProtocol(): 'http' | 'https' {\n    return this.appOptions && this.appOptions.httpsOptions ? 'https' : 'http';\n  }\n\n  private async registerMiddleware(instance: any) {\n    await this.middlewareModule.registerMiddleware(\n      this.middlewareContainer,\n      instance,\n    );\n  }\n}\n"]}