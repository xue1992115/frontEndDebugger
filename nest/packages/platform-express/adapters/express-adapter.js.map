{"version":3,"file":"express-adapter.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/platform-express/","sources":["adapters/express-adapter.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Server } from 'http';\nimport {\n  HttpStatus,\n  InternalServerErrorException,\n  Logger,\n  RequestMethod,\n  StreamableFile,\n  VersioningOptions,\n  VersioningType,\n  VERSION_NEUTRAL,\n} from '@nestjs/common';\nimport { VersionValue } from '@nestjs/common/interfaces';\nimport {\n  CorsOptions,\n  CorsOptionsDelegate,\n} from '@nestjs/common/interfaces/external/cors-options.interface';\nimport { NestApplicationOptions } from '@nestjs/common/interfaces/nest-application-options.interface';\nimport {\n  isFunction,\n  isNil,\n  isObject,\n  isString,\n  isUndefined,\n} from '@nestjs/common/utils/shared.utils';\nimport { AbstractHttpAdapter } from '@nestjs/core/adapters/http-adapter';\nimport { RouterMethodFactory } from '@nestjs/core/helpers/router-method-factory';\nimport {\n  json as bodyParserJson,\n  urlencoded as bodyParserUrlencoded,\n} from 'body-parser';\nimport * as bodyparser from 'body-parser';\nimport * as cors from 'cors';\nimport * as express from 'express';\nimport * as http from 'http';\nimport * as https from 'https';\nimport { Duplex, pipeline } from 'stream';\nimport { NestExpressBodyParserOptions } from '../interfaces/nest-express-body-parser-options.interface';\nimport { NestExpressBodyParserType } from '../interfaces/nest-express-body-parser.interface';\nimport { ServeStaticOptions } from '../interfaces/serve-static-options.interface';\nimport { getBodyParserOptions } from './utils/get-body-parser-options.util';\n\ntype VersionedRoute = <\n  TRequest extends Record<string, any> = any,\n  TResponse = any,\n>(\n  req: TRequest,\n  res: TResponse,\n  next: () => void,\n) => any;\n\n/**\n * @publicApi\n */\nexport class ExpressAdapter extends AbstractHttpAdapter {\n  private readonly routerMethodFactory = new RouterMethodFactory();\n  private readonly logger = new Logger(ExpressAdapter.name);\n  private readonly openConnections = new Set<Duplex>();\n\n  constructor(instance?: any) {\n    super(instance || express());\n  }\n\n  public reply(response: any, body: any, statusCode?: number) {\n    if (statusCode) {\n      response.status(statusCode);\n    }\n    if (isNil(body)) {\n      return response.send();\n    }\n    if (body instanceof StreamableFile) {\n      const streamHeaders = body.getHeaders();\n      if (\n        response.getHeader('Content-Type') === undefined &&\n        streamHeaders.type !== undefined\n      ) {\n        response.setHeader('Content-Type', streamHeaders.type);\n      }\n      if (\n        response.getHeader('Content-Disposition') === undefined &&\n        streamHeaders.disposition !== undefined\n      ) {\n        response.setHeader('Content-Disposition', streamHeaders.disposition);\n      }\n      if (\n        response.getHeader('Content-Length') === undefined &&\n        streamHeaders.length !== undefined\n      ) {\n        response.setHeader('Content-Length', streamHeaders.length);\n      }\n      return pipeline(\n        body.getStream().once('error', (err: Error) => {\n          body.errorHandler(err, response);\n        }),\n        response,\n        (err: Error) => {\n          if (err) {\n            this.logger.error(err.message, err.stack);\n          }\n        },\n      );\n    }\n    if (\n      response.getHeader('Content-Type') !== undefined &&\n      response.getHeader('Content-Type') !== 'application/json' &&\n      body?.statusCode >= HttpStatus.BAD_REQUEST\n    ) {\n      this.logger.warn(\n        \"Content-Type doesn't match Reply body, you might need a custom ExceptionFilter for non-JSON responses\",\n      );\n      response.setHeader('Content-Type', 'application/json');\n    }\n    return isObject(body) ? response.json(body) : response.send(String(body));\n  }\n\n  public status(response: any, statusCode: number) {\n    return response.status(statusCode);\n  }\n\n  public end(response: any, message?: string) {\n    return response.end(message);\n  }\n\n  public render(response: any, view: string, options: any) {\n    return response.render(view, options);\n  }\n\n  public redirect(response: any, statusCode: number, url: string) {\n    return response.redirect(statusCode, url);\n  }\n\n  public setErrorHandler(handler: Function, prefix?: string) {\n    return this.use(handler);\n  }\n\n  public setNotFoundHandler(handler: Function, prefix?: string) {\n    return this.use(handler);\n  }\n\n  public isHeadersSent(response: any): boolean {\n    return response.headersSent;\n  }\n\n  public setHeader(response: any, name: string, value: string) {\n    return response.set(name, value);\n  }\n\n  public listen(port: string | number, callback?: () => void): Server;\n  public listen(\n    port: string | number,\n    hostname: string,\n    callback?: () => void,\n  ): Server;\n  public listen(port: any, ...args: any[]): Server {\n    return this.httpServer.listen(port, ...args);\n  }\n\n  public close() {\n    this.closeOpenConnections();\n\n    if (!this.httpServer) {\n      return undefined;\n    }\n    return new Promise(resolve => this.httpServer.close(resolve));\n  }\n\n  public set(...args: any[]) {\n    return this.instance.set(...args);\n  }\n\n  public enable(...args: any[]) {\n    return this.instance.enable(...args);\n  }\n\n  public disable(...args: any[]) {\n    return this.instance.disable(...args);\n  }\n\n  public engine(...args: any[]) {\n    return this.instance.engine(...args);\n  }\n\n  public useStaticAssets(path: string, options: ServeStaticOptions) {\n    if (options && options.prefix) {\n      return this.use(options.prefix, express.static(path, options));\n    }\n    return this.use(express.static(path, options));\n  }\n\n  public setBaseViewsDir(path: string | string[]) {\n    return this.set('views', path);\n  }\n\n  public setViewEngine(engine: string) {\n    return this.set('view engine', engine);\n  }\n\n  public getRequestHostname(request: any): string {\n    return request.hostname;\n  }\n\n  public getRequestMethod(request: any): string {\n    return request.method;\n  }\n\n  public getRequestUrl(request: any): string {\n    return request.originalUrl;\n  }\n\n  public enableCors(options: CorsOptions | CorsOptionsDelegate<any>) {\n    return this.use(cors(options));\n  }\n\n  public createMiddlewareFactory(\n    requestMethod: RequestMethod,\n  ): (path: string, callback: Function) => any {\n    return this.routerMethodFactory\n      .get(this.instance, requestMethod)\n      .bind(this.instance);\n  }\n\n  public initHttpServer(options: NestApplicationOptions) {\n    const isHttpsEnabled = options && options.httpsOptions;\n    if (isHttpsEnabled) {\n      this.httpServer = https.createServer(\n        options.httpsOptions,\n        this.getInstance(),\n      );\n    } else {\n      this.httpServer = http.createServer(this.getInstance());\n    }\n\n    if (options?.forceCloseConnections) {\n      this.trackOpenConnections();\n    }\n  }\n\n  public registerParserMiddleware(prefix?: string, rawBody?: boolean) {\n    const bodyParserJsonOptions = getBodyParserOptions(rawBody);\n    const bodyParserUrlencodedOptions = getBodyParserOptions(rawBody, {\n      extended: true,\n    });\n\n    const parserMiddleware = {\n      jsonParser: bodyParserJson(bodyParserJsonOptions),\n      urlencodedParser: bodyParserUrlencoded(bodyParserUrlencodedOptions),\n    };\n    Object.keys(parserMiddleware)\n      .filter(parser => !this.isMiddlewareApplied(parser))\n      .forEach(parserKey => this.use(parserMiddleware[parserKey]));\n  }\n\n  public useBodyParser<Options = NestExpressBodyParserOptions>(\n    type: NestExpressBodyParserType,\n    rawBody: boolean,\n    options?: Omit<Options, 'verify'>,\n  ): this {\n    const parserOptions = getBodyParserOptions<Options>(rawBody, options);\n    const parser = bodyparser[type](parserOptions);\n\n    this.use(parser);\n\n    return this;\n  }\n\n  public setLocal(key: string, value: any) {\n    this.instance.locals[key] = value;\n    return this;\n  }\n\n  public getType(): string {\n    return 'express';\n  }\n\n  public applyVersionFilter(\n    handler: Function,\n    version: VersionValue,\n    versioningOptions: VersioningOptions,\n  ): VersionedRoute {\n    const callNextHandler: VersionedRoute = (req, res, next) => {\n      if (!next) {\n        throw new InternalServerErrorException(\n          'HTTP adapter does not support filtering on version',\n        );\n      }\n      return next();\n    };\n\n    if (\n      version === VERSION_NEUTRAL ||\n      // URL Versioning is done via the path, so the filter continues forward\n      versioningOptions.type === VersioningType.URI\n    ) {\n      const handlerForNoVersioning: VersionedRoute = (req, res, next) =>\n        handler(req, res, next);\n\n      return handlerForNoVersioning;\n    }\n\n    // Custom Extractor Versioning Handler\n    if (versioningOptions.type === VersioningType.CUSTOM) {\n      const handlerForCustomVersioning: VersionedRoute = (req, res, next) => {\n        const extractedVersion = versioningOptions.extractor(req);\n\n        if (Array.isArray(version)) {\n          if (\n            Array.isArray(extractedVersion) &&\n            version.filter(v => extractedVersion.includes(v as string)).length\n          ) {\n            return handler(req, res, next);\n          }\n\n          if (\n            isString(extractedVersion) &&\n            version.includes(extractedVersion)\n          ) {\n            return handler(req, res, next);\n          }\n        } else if (isString(version)) {\n          // Known bug here - if there are multiple versions supported across separate\n          // handlers/controllers, we can't select the highest matching handler.\n          // Since this code is evaluated per-handler, then we can't see if the highest\n          // specified version exists in a different handler.\n          if (\n            Array.isArray(extractedVersion) &&\n            extractedVersion.includes(version)\n          ) {\n            return handler(req, res, next);\n          }\n\n          if (isString(extractedVersion) && version === extractedVersion) {\n            return handler(req, res, next);\n          }\n        }\n\n        return callNextHandler(req, res, next);\n      };\n\n      return handlerForCustomVersioning;\n    }\n\n    // Media Type (Accept Header) Versioning Handler\n    if (versioningOptions.type === VersioningType.MEDIA_TYPE) {\n      const handlerForMediaTypeVersioning: VersionedRoute = (\n        req,\n        res,\n        next,\n      ) => {\n        const MEDIA_TYPE_HEADER = 'Accept';\n        const acceptHeaderValue: string | undefined =\n          req.headers?.[MEDIA_TYPE_HEADER] ||\n          req.headers?.[MEDIA_TYPE_HEADER.toLowerCase()];\n\n        const acceptHeaderVersionParameter = acceptHeaderValue\n          ? acceptHeaderValue.split(';')[1]\n          : undefined;\n\n        // No version was supplied\n        if (isUndefined(acceptHeaderVersionParameter)) {\n          if (Array.isArray(version)) {\n            if (version.includes(VERSION_NEUTRAL)) {\n              return handler(req, res, next);\n            }\n          }\n        } else {\n          const headerVersion = acceptHeaderVersionParameter.split(\n            versioningOptions.key,\n          )[1];\n\n          if (Array.isArray(version)) {\n            if (version.includes(headerVersion)) {\n              return handler(req, res, next);\n            }\n          } else if (isString(version)) {\n            if (version === headerVersion) {\n              return handler(req, res, next);\n            }\n          }\n        }\n\n        return callNextHandler(req, res, next);\n      };\n\n      return handlerForMediaTypeVersioning;\n    }\n\n    // Header Versioning Handler\n    if (versioningOptions.type === VersioningType.HEADER) {\n      const handlerForHeaderVersioning: VersionedRoute = (req, res, next) => {\n        const customHeaderVersionParameter: string | undefined =\n          req.headers?.[versioningOptions.header] ||\n          req.headers?.[versioningOptions.header.toLowerCase()];\n\n        // No version was supplied\n        if (isUndefined(customHeaderVersionParameter)) {\n          if (Array.isArray(version)) {\n            if (version.includes(VERSION_NEUTRAL)) {\n              return handler(req, res, next);\n            }\n          }\n        } else {\n          if (Array.isArray(version)) {\n            if (version.includes(customHeaderVersionParameter)) {\n              return handler(req, res, next);\n            }\n          } else if (isString(version)) {\n            if (version === customHeaderVersionParameter) {\n              return handler(req, res, next);\n            }\n          }\n        }\n\n        return callNextHandler(req, res, next);\n      };\n\n      return handlerForHeaderVersioning;\n    }\n  }\n\n  private trackOpenConnections() {\n    this.httpServer.on('connection', (socket: Duplex) => {\n      this.openConnections.add(socket);\n\n      socket.on('close', () => this.openConnections.delete(socket));\n    });\n  }\n\n  private closeOpenConnections() {\n    for (const socket of this.openConnections) {\n      socket.destroy();\n      this.openConnections.delete(socket);\n    }\n  }\n\n  private isMiddlewareApplied(name: string): boolean {\n    const app = this.getInstance();\n    return (\n      !!app._router &&\n      !!app._router.stack &&\n      isFunction(app._router.stack.filter) &&\n      app._router.stack.some(\n        (layer: any) => layer && layer.handle && layer.handle.name === name,\n      )\n    );\n  }\n}\n"]}