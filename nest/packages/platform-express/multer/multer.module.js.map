{"version":3,"file":"multer.module.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/platform-express/","sources":["multer/multer.module.ts"],"names":[],"mappings":";;;;;AAAA,2CAAiE;AACjE,oGAA0F;AAC1F,uDAA0D;AAM1D,yDAAsD;AAGtD,IAAa,YAAY,oBAAzB,MAAa,YAAY;IACvB,MAAM,CAAC,QAAQ,CAAC,UAA+B,EAAE;QAC/C,OAAO;YACL,MAAM,EAAE,cAAY;YACpB,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,uCAAqB,EAAE,QAAQ,EAAE,OAAO,EAAE;gBACrD;oBACE,OAAO,EAAE,mCAAgB;oBACzB,QAAQ,EAAE,IAAA,oDAAqB,GAAE;iBAClC;aACF;YACD,OAAO,EAAE,CAAC,uCAAqB,CAAC;SACjC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,OAAiC;QACpD,OAAO;YACL,MAAM,EAAE,cAAY;YACpB,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,SAAS,EAAE;gBACT,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC;gBACrC;oBACE,OAAO,EAAE,mCAAgB;oBACzB,QAAQ,EAAE,IAAA,oDAAqB,GAAE;iBAClC;aACF;YACD,OAAO,EAAE,CAAC,uCAAqB,CAAC;SACjC,CAAC;IACJ,CAAC;IAEO,MAAM,CAAC,oBAAoB,CACjC,OAAiC;QAEjC,IAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,UAAU,EAAE;YAC7C,OAAO,CAAC,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,CAAC;SACnD;QACD,OAAO;YACL,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC;YACxC;gBACE,OAAO,EAAE,OAAO,CAAC,QAAQ;gBACzB,QAAQ,EAAE,OAAO,CAAC,QAAQ;aAC3B;SACF,CAAC;IACJ,CAAC;IAEO,MAAM,CAAC,0BAA0B,CACvC,OAAiC;QAEjC,IAAI,OAAO,CAAC,UAAU,EAAE;YACtB,OAAO;gBACL,OAAO,EAAE,uCAAqB;gBAC9B,UAAU,EAAE,OAAO,CAAC,UAAU;gBAC9B,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,EAAE;aAC7B,CAAC;SACH;QACD,OAAO;YACL,OAAO,EAAE,uCAAqB;YAC9B,UAAU,EAAE,KAAK,EAAE,cAAoC,EAAE,EAAE,CACzD,cAAc,CAAC,mBAAmB,EAAE;YACtC,MAAM,EAAE,CAAC,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,QAAQ,CAAC;SAClD,CAAC;IACJ,CAAC;CACF,CAAA;AA9DY,YAAY;IADxB,IAAA,eAAM,EAAC,EAAE,CAAC;GACE,YAAY,CA8DxB;AA9DY,oCAAY","sourcesContent":["import { DynamicModule, Module, Provider } from '@nestjs/common';\nimport { randomStringGenerator } from '@nestjs/common/utils/random-string-generator.util';\nimport { MULTER_MODULE_OPTIONS } from './files.constants';\nimport {\n  MulterModuleAsyncOptions,\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from './interfaces/files-upload-module.interface';\nimport { MULTER_MODULE_ID } from './multer.constants';\n\n@Module({})\nexport class MulterModule {\n  static register(options: MulterModuleOptions = {}): DynamicModule {\n    return {\n      module: MulterModule,\n      providers: [\n        { provide: MULTER_MODULE_OPTIONS, useValue: options },\n        {\n          provide: MULTER_MODULE_ID,\n          useValue: randomStringGenerator(),\n        },\n      ],\n      exports: [MULTER_MODULE_OPTIONS],\n    };\n  }\n\n  static registerAsync(options: MulterModuleAsyncOptions): DynamicModule {\n    return {\n      module: MulterModule,\n      imports: options.imports,\n      providers: [\n        ...this.createAsyncProviders(options),\n        {\n          provide: MULTER_MODULE_ID,\n          useValue: randomStringGenerator(),\n        },\n      ],\n      exports: [MULTER_MODULE_OPTIONS],\n    };\n  }\n\n  private static createAsyncProviders(\n    options: MulterModuleAsyncOptions,\n  ): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass,\n        useClass: options.useClass,\n      },\n    ];\n  }\n\n  private static createAsyncOptionsProvider(\n    options: MulterModuleAsyncOptions,\n  ): Provider {\n    if (options.useFactory) {\n      return {\n        provide: MULTER_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || [],\n      };\n    }\n    return {\n      provide: MULTER_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: MulterOptionsFactory) =>\n        optionsFactory.createMulterOptions(),\n      inject: [options.useExisting || options.useClass],\n    };\n  }\n}\n"]}