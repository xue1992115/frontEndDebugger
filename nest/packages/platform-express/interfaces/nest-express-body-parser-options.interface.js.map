{"version":3,"file":"nest-express-body-parser-options.interface.js","sourceRoot":"/Users/hanxiaoxue/Documents/work/frontEndDebugger/nest/packages/platform-express/","sources":["interfaces/nest-express-body-parser-options.interface.ts"],"names":[],"mappings":"","sourcesContent":["import type { IncomingMessage } from 'http';\n\n/**\n * Type alias to keep compatibility with @types/body-parser\n * @see https://github.com/DefinitelyTyped/DefinitelyTyped/blob/dcd1673c4fa18a15ea8cd8ff8af7d563bb6dc8e6/types/body-parser/index.d.ts#L48-L66#L48-L66\n * @publicApi\n */\nexport interface NestExpressBodyParserOptions {\n  /** When set to true, then deflated (compressed) bodies will be inflated; when false, deflated bodies are rejected. Defaults to true. */\n  inflate?: boolean | undefined;\n\n  /**\n   * Controls the maximum request body size. If this is a number,\n   * then the value specifies the number of bytes; if it is a string,\n   * the value is passed to the bytes library for parsing. Defaults to '100kb'.\n   */\n  limit?: number | string | undefined;\n\n  /**\n   * The type option is used to determine what media type the middleware will parse\n   */\n  type?: string | string[] | ((req: IncomingMessage) => any) | undefined;\n\n  // Catch-all for body-parser type specific options\n  [key: string]: unknown;\n}\n"]}